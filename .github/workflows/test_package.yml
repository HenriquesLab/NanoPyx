# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Pytest

on:
  push:
    branches: ["main"]
    paths:
      # only run if src or tests changes
      # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
      - "src/**"
      - "tests/**"
  pull_request:
    branches: ["main"]
  # creates a button
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug

jobs:
  test:
    strategy:
      matrix:
        py_versions: [py311, py310, py39, py38]

    runs-on: ${{ matrix.py_versions }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          pip3 install -e '.[test]'

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest -n=0 --timeout=1200 --nbmake-timeout=1200
          coverage xml

      - uses: codecov/codecov-action@v3
        with:
          files: coverage.xml # optional
          flags: pytests # optional
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)
