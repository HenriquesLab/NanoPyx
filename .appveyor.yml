# REF: https://www.appveyor.com/docs/getting-started-with-appveyor-for-linux/

version: "{build}-{branch}"

shallow_clone: false

# branches to build
branches:
  # whitelist
  only:
    - main
    - \d+\.\d+\.\d+$/ # build only tags that match the pattern v1.2.3

# Do not build on tags (GitHub, Bitbucket, GitLab, Gitea)
# skip_tags: false
# Start builds on tags only (GitHub, BitBucket, GitLab, Gitea)
# skip_non_tags: true

only_commits:
  files:
    # only trigger build if these files change
    #https://www.appveyor.com/docs/how-to/filtering-commits/#skip-commits-2
    - src/
    - pyproject.toml
    - .appveyor.yml

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      APPVEYOR_SAVE_CACHE_ON_ERROR: true
      OS_NAME: win
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      APPVEYOR_SAVE_CACHE_ON_ERROR: true
      OS_NAME: linux
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
      APPVEYOR_SAVE_CACHE_ON_ERROR: true
      OS_NAME: darwin
      LD_LIBRARY_PATH: ./build_utils/libs_build/lib
      LIBRARY_PATH: $(LD_LIBRARY_PATH)
      LD_RUNPATH_SEARCH_PATH: $(LD_LIBRARY_PATH)
      DYLD_FALLBACK_LIBRARY_PATH: $(LD_LIBRARY_PATH)

  access_token:
    secure: VDbNqf7th0x0/u2BDKnebeGa6ljTeME+9WKs2hnZPiBbIttfvHuaBsku/tL/JURS

stack: python 3.9

cache:
  - cache-pip
  - cache-cibuildwheel

init:
  - cmd: set PATH=C:\Python38;C:\Python38\Scripts;%PATH%

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps:
      if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
      https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
      Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
      throw "There are newer queued builds for this pull request, failing early." }
  - python -m pip install --upgrade pip --cache-dir cache-pip
  - python -m pip install pipx --cache-dir cache-pip

build_script:
  # build wheels for windows, also sdist
  - cmd: pipx run nox --sessions build_wheel build_sdist
  # build wheels for darwin
  - sh: "[[ $OS_NAME == 'darwin' ]] && brew install python@3.8 python@3.9 python@3.10 python@3.11 || true" # llvm libomp
  - sh: "[[ $OS_NAME == 'darwin' ]] && NPX_CYTHON_THREADS=2 pipx run nox --sessions build_wheel || true"
  # build wheels for linux
  - sh: "[[ $OS_NAME == 'linux' ]] && CIBW_CACHE_PATH='cache-cibuildwheel' pipx run cibuildwheel --output-dir wheelhouse || true"

test_script:
  - pipx run twine check wheelhouse/*.whl
  - cmd: pipx run nox --sessions test_wheel
  - sh: "[[ $OS_NAME == 'darwin' ]] && pipx run nox --sessions test_wheel || true"
  - sh: "[[ $OS_NAME == 'darwin' ]] && bash build_tools/build_libomp.sh || true"
  - sh: "[[ $OS_NAME == 'linux' ]] && source $HOME/venv3.9/bin/activate && pip install nox && nox --sessions test_wheel-3.9 && deactivate|| true"
  - sh: "[[ $OS_NAME == 'linux' ]] && source $HOME/venv3.10/bin/activate && pip install nox && nox --sessions test_wheel-3.10 && deactivate|| true"
  - sh: "[[ $OS_NAME == 'linux' ]] && source $HOME/venv3.11/bin/activate && pip install nox && nox --sessions test_wheel-3.11 && deactivate|| true"

artifacts:
  - path: "wheelhouse\\*.whl"
    name: Wheels
  - path: "wheelhouse\\*.tar.gz"
    name: SDist

notifications:
  - provider: Email
    to:
      - "{{commitAuthorEmail}}"
    on_build_success: true
    on_build_failure: true
    on_build_status_changed: true
  - provider: GitHubPullRequest
    auth_token:
      secure: VDbNqf7th0x0/u2BDKnebeGa6ljTeME+9WKs2hnZPiBbIttfvHuaBsku/tL/JURS
    template: "{{#passed}}:white_check_mark:{{/passed}}{{#failed}}:x:{{/failed}} [Build {{&projectName}} {{buildVersion}} {{status}}]({{buildUrl}}) (commit {{commitUrl}} by @{{&commitAuthorUsername}})"

deploy:
  # skip_tags: true
  #on:
  # branch: main # release from main branch only
  # APPVEYOR_REPO_TAG: true # deploy on tag push only
  provider: GitHub
  tag: $(APPVEYOR_REPO_TAG_NAME)
  repository: "HenriquesLab/NanoPyx"
  release: Latest builds by AppVeyor
  description: "Note: these builds are generally untested"
  auth_token:
    secure: VDbNqf7th0x0/u2BDKnebeGa6ljTeME+9WKs2hnZPiBbIttfvHuaBsku/tL/JURS
  artifact: Wheels, SDist
  draft: true
  prerelease: false
