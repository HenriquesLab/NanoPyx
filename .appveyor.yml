version: 1.0.{build}

# REF: https://github.com/libyal/libexe/blob/a1d3190355aba02a89b503b2065b7218d8210764/appveyor.yml

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
      OS_LABEL: macos
      PYTHON_VERSION: 3.8
      PYTHON_CMD: python@3.8
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      OS_LABEL: linux
      PYTHON_VERSION: 3.8
      PYTHON_CMD: ~/venv3.8/bin/python
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      OS_LABEL: win
      PYTHON_VERSION: 3.8
      PYTHON_CMD: C:\\Python38\\python.exe

cache:
  - ~/.cache/cibuildwheel
  - build

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps:
      if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
      https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
      Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
      throw "There are newer queued builds for this pull request, failing early." }
  # - PS: if ($env:OS_LABEL -eq 'win') { choco install python --version $env:PYTHON_VERSION }
  # - PS: if ($env:OS_LABEL -eq 'linux') { sudo apt-get update && sudo apt-get install -qqy python$env:PYTHON_VERSION }
  # - PS: if ($env:OS_LABEL -eq 'macos') { brew install python@$env:PYTHON_VERSION }
  - ps: if ($env:OS_LABEL -eq 'win') { $env:PATH = "C:\Python$env:PYTHON_VERSION;C:\Python$env:PYTHON_VERSION\Scripts;$env:PATH" }
  - ps: Set-Alias _python $env:PYTHON_CMD
  - ps: _python -m pip install --upgrade pip
  - ps: _python -m pip install -e .[developer,test]

build_script:
  # - ps: _python -m cibuildwheel --output-dir wheelhouse
  - ps: _python setup.py build
  - ps: _python setup.py bdist_wheel

test_script:
  - ps: _python -m pytest

artifacts:
  - path: dist\*.whl
