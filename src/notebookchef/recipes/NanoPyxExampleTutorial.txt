$markdown
# NanoPyx "Codeless" Jupyter Notebook

This notebook showcases loading an example datast with NanoPyx, performing super-resolution image generation using SRRF (Super-Resolution Radiality Fluctuations) and then measuring quality control metrics such as FRC (Fourier Ring Correlation) and Decorrelation analysis.

$include: notebook_intro.txt
$include: citations/srrf.txt
$include: citations/frc.txt
$include: citations/decorr.txt
__cellbreak__
$code
$include: opencl_colab_fix.py
__cellbreak__
$code
$include: notebook_setup.py
__cellbreak__
$markdown
## Next lets create the Data Loader GUI.
Once you run the cell, make sure to select the SMLMS2013_HDTubulingAlexa647 dataset
__cellbreak__
$code
$include: image_loading.py
__cellbreak__
$markdown
## Now let's use SRRF to generate a super-resolution image
__cellbreak__
$markdown
$include: parameters/srrf.txt
__cellbreak__
$code
$include: methods/srrf.py
__cellbreak__
$markdown
## Let's use NanoPyx to generate an error map of the SRRF image
__cellbreak__
$code
$include: methods/error_map.py
__cellbreak__
$markdown
## Let's compare the resolution of the raw data with the SRRF using FRC and DecorrelationAnalysis. Let's start with calculation the FRC resolution of the raw data.
__cellbreak__
$markdown
$include: parameters/frc.txt
__cellbreak__
$code
$include: methods/frc.py $tag2tag: gui_frc_1,gui_frc_df;original image,diffraction limited image
__cellbreak__
$markdown
## Now do the same for the srrf image
__cellbreak__
$code
$include: methods/frc.py $tag2tag: original image,srrf image
__cellbreak__
$markdown
## Let's do the same using Decorrelation analysis
__cellbreak__
$markdown
$include: parameters/decorr.txt
__cellbreak__
$code
$include: methods/decorr.py $tag2tag: gui_decorr_1,gui_decorr_df;original image,diffraction limited image
__cellbreak__
$markdown
## Now let's measure the resolution of the generated SRRF image using Decorrelation analysis
__cellbreak__
$code
$include: methods/decorr.py $tag2tag: original image,srrf image
