cdef extern from "_c_gradients.h":
    void _c_gradient_radiality(float* image, float* imGc, float* imGr, int rows, int cols) nogil


cdef extern from "_c_sr_radiality.h":
    void _calculate_radiality(float** imRaw, float** imRad, float** imIW, float** imGx, float** imGy, float shiftX, float shiftY, float border, float* xRingCoordinates, float* yRingCoordinates, int magnification, float ringRadius, int nRingCoordinates, int radialityPositivityConstraint, int doIntensityWeighting, int h, int w) nogil
  

# pyx2pxd: starting point
# Code below is autogenerated by pyx2pxd


cdef class Radiality:
    cdef int magnification, symmetryAxis, border, nRingCoordinates
    cdef float ringRadius, psfWidth, gradRadius
    cdef bint doIntegrateLagTimes, radialityPositivityConstraint, doIntensityWeighting
    cdef float[12] xRingCoordinates, yRingCoordinates
    cdef void _calculate_radiality(self, float[:,:] imRaw, float[:,:] imRad, float[:,:] imIW, float[:,:] imGx, float[:,:] imGy, float shiftX, float shiftY) nogil
    cdef float _calculateDk(self, float x, float y, float xc, float yc, float vGx, float vGy, float vGx2Gy2) nogil
