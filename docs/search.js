window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"nanopyx": {"fullname": "nanopyx", "modulename": "nanopyx", "kind": "module", "doc": "<h1 id=\"nanopyx\">NanoPyx</h1>\n\n<p><a href=\"https://github.com/HenriquesLab/NanoPyx/blob/main/LICENSE\"><img src=\"https://img.shields.io/pypi/l/nanopyx.svg?color=green\" alt=\"License\" /></a>\n<a href=\"https://pypi.org/project/nanopyx\"><img src=\"https://img.shields.io/pypi/v/nanopyx.svg?color=green\" alt=\"PyPI\" /></a>\n<a href=\"https://python.org\"><img src=\"https://img.shields.io/pypi/pyversions/nanopyx.svg?color=green\" alt=\"Python Version\" /></a>\n<a href=\"https://github.com/HenriquesLab/NanoPyx/actions\"><img src=\"https://github.com/HenriquesLab/NanoPyx/workflows/tests/badge.svg\" alt=\"tests\" /></a>\n<a href=\"https://codecov.io/gh/HenriquesLab/NanoPyx\"><img src=\"https://codecov.io/gh/HenriquesLab/NanoPyx/branch/main/graph/badge.svg\" alt=\"codecov\" /></a></p>\n\n<p>Nanoscopy Python library (NanoPyx, the successor to NanoJ) - focused on light microscopy and super-resolution imaging</p>\n\n<hr />\n\n<h2 id=\"what-is-the-nanopyx-library\">What is the NanoPyx \ud83d\udd2c Library?</h2>\n\n<p>NanoPyx is a library specialized in the analysis of light microscopy and super-resolution data.\nIt is a successor to NanoJ, which is a Java library for the analysis of super-resolution microscopy data.</p>\n\n<p>NanoPyx focuses on performance, by heavily exploiting cython aided multiprocessing and simplicity. It implements methods for the bioimage analysis field, with a special emphasis on those developed by the <a href=\"https://henriqueslab.github.io/\">Henriques Laboratory</a>.</p>\n\n<p>Currently it implements the following approaches:</p>\n\n<ul>\n<li>A reimplementation of the NanoJ drift correction</li>\n<li>...</li>\n</ul>\n\n<h2 id=\"installation\">Installation</h2>\n\n<p>You can install <code>NanoPyx</code> via [pip]:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip install nanopyx\n</code></pre>\n</div>\n\n<p>or if you want to install with all optional dependencies</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip install nanopyx<span class=\"o\">[</span>all<span class=\"o\">]</span>\n</code></pre>\n</div>\n\n<p>To install latest development version :</p>\n\n<pre><code>pip install git+https://github.com/HenriquesLab/NanoPyx.git\n</code></pre>\n\n<h3 id=\"notes-for-mac-users\">Notes for Mac users</h3>\n\n<p>If you wish to compile the NanoPyx library from source, you will need to install the following dependencies:</p>\n\n<ul>\n<li>Homebrew from <a href=\"https://brew.sh/\">https://brew.sh/</a></li>\n<li>gcc, llvm and libomp from Homebrew through the command:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>brew install gcc llvm libomp\n</code></pre>\n</div>\n\n<h2 id=\"run-in-jupyterlab-within-a-docker-container\">Run in jupyterlab within a docker container</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>docker run --name nanopyx1 -p <span class=\"m\">8888</span>:8888 henriqueslab/nanopyx:latest\n</code></pre>\n</div>\n\n<h2 id=\"contributing\">Contributing</h2>\n\n<p>Contributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.</p>\n\n<h2 id=\"license\">License</h2>\n\n<p>Distributed under the terms of the [GNU GPL v2.0] license,\n\"NanoPyx\" is free and open source software</p>\n\n<h2 id=\"issues\">Issues</h2>\n\n<p>If you encounter any problems, please [file an issue] along with a detailed description.</p>\n"}, "nanopyx.core": {"fullname": "nanopyx.core", "modulename": "nanopyx.core", "kind": "module", "doc": "<p>Contains core methods to analyse and manipulate data within NanoPyx</p>\n"}, "nanopyx.core.analysis": {"fullname": "nanopyx.core.analysis", "modulename": "nanopyx.core.analysis", "kind": "module", "doc": "<p>Module containing image analysis functions.\nIncludes functions for cross correlations and Pearson's correlation.</p>\n"}, "nanopyx.core.analysis.ccm": {"fullname": "nanopyx.core.analysis.ccm", "modulename": "nanopyx.core.analysis.ccm", "kind": "module", "doc": "<p>Module used for creating cross correlation matrices for image stacks.</p>\n"}, "nanopyx.core.analysis.ccm.ccm": {"fullname": "nanopyx.core.analysis.ccm.ccm", "modulename": "nanopyx.core.analysis.ccm.ccm", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"fullname": "nanopyx.core.analysis.ccm.ccm.calculate_ccm", "modulename": "nanopyx.core.analysis.ccm.ccm", "qualname": "calculate_ccm", "kind": "function", "doc": "<p>Function used to generate a cross correlation matrix of an image stack.\nCross correlation is calculated using either the first image of the stack or the previous image.\nCross correlation values are normalized by the minimum and maximum Pearson's correlation between the two\nimages.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>img_stack</strong>:  numpy array with shape (t, y, x)</li>\n<li><strong>ref</strong>:  either 0 or 1, 0 is used to calculate the ccm based on the first frame, 1 used to calculate based on the previous frame</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>numpy array with shape (t, y, x), corresponding to the cross correlation matrix</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"fullname": "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref", "modulename": "nanopyx.core.analysis.ccm.ccm", "qualname": "calculate_ccm_from_ref", "kind": "function", "doc": "<p>Function used to generate a cross correlation matrix of an image stack.\nCross correlation is calculated using a static image frame.\nCross correlation values are normalized by the minimum and maximum Pearson's correlation between the two\nimages.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>img_stack</strong>:  numpy array with shape (t, y, x)</li>\n<li><strong>img_ref</strong>:  numpy array with shape (y, x)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>numpy array with shape (t, y, x), corresponding to the cross correlation matrix</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.ccm.cross_correlation_elastic": {"fullname": "nanopyx.core.analysis.ccm.cross_correlation_elastic", "modulename": "nanopyx.core.analysis.ccm.cross_correlation_elastic", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"fullname": "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask", "modulename": "nanopyx.core.analysis.ccm.cross_correlation_elastic", "qualname": "calculate_translation_mask", "kind": "function", "doc": "<p>Function used to calculate a translation mask between 2 different images.\nMethod based on dividing both images in smaller blocks and calculate cross correlation matrix between corresponding\nblocks. From the ccm, the shift between the two images is calculated for each block and a translation matrix is\nusing the shifts in the center position of each block and then interpolating the remaining translation mask.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>img_slice</strong>:  numpy array with shape (y, x); image to be used for translation mask calculation</li>\n<li><strong>img_ref</strong>:  numpy array with shape (y, x); image to be used as reference for translation mask calculation</li>\n<li><strong>max_shift</strong>:  int; maximum shift accepted between each corresponding block, in pixels.</li>\n<li><strong>blocks_per_axis</strong>:  int; number of blocks for both axis</li>\n<li><strong>min_similarity</strong>:  float; minimum similarity (cross correlation value after normalization) between corresponding\nblocks.</li>\n<li><strong>method</strong>:  str, either \"subpixel\" or \"max\"; defaults to \"subpixel\"; subpixel uses a minimizer to achieve\nsubpixel precision in shift calculation. max simply takes the coordinates corresponding to the max value of the ccm.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>numpy array with shape (y, x) where width is equal to two times the width of the original image.\n  [:, :width/2] corresponds to the translation mask for x and [:, width/2:] corresponds to the translation mask for y.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">img_slice</span>,</span><span class=\"param\">\t<span class=\"n\">img_ref</span>,</span><span class=\"param\">\t<span class=\"n\">max_shift</span>,</span><span class=\"param\">\t<span class=\"n\">blocks_per_axis</span>,</span><span class=\"param\">\t<span class=\"n\">min_similarity</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;subpixel&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"fullname": "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice", "modulename": "nanopyx.core.analysis.ccm.cross_correlation_elastic", "qualname": "get_shift_from_ccm_slice", "kind": "function", "doc": "<p>Function used to calculate the shift corresponding to the maximum correlation between two images.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>slice_ccm</strong>:  numpy array with shape (y, x);</li>\n<li><strong>method</strong>:  str, either \"subpixel\" or \"max\"; defaults to \"subpixel\"; subpixel uses a minimizer to achieve\nsubpixel precision in shift calculation. max simply takes the coordinates corresponding to the max value of the ccm.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>tuple of floats; values corresponding to shift_x and shift_y, in this order.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">slice_ccm</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;subpixel&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.ccm.estimate_shift": {"fullname": "nanopyx.core.analysis.ccm.estimate_shift", "modulename": "nanopyx.core.analysis.ccm.estimate_shift", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"fullname": "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer", "modulename": "nanopyx.core.analysis.ccm.estimate_shift", "qualname": "GetMaxOptimizer", "kind": "class", "doc": "<p>Class GetMaxOptimizer, used to extract the maximum value from a cross correlation matrix with subpixel precision.</p>\n"}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"fullname": "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__", "modulename": "nanopyx.core.analysis.ccm.estimate_shift", "qualname": "GetMaxOptimizer.__init__", "kind": "function", "doc": "<p>Creates an instance of GetMaxOptimizer.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>slice_ccm</strong>:  numpy array with shape (y, x); ccm from which to extract the maximum value with subpixel\nprecision.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">slice_ccm</span></span>)</span>"}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"fullname": "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d", "modulename": "nanopyx.core.analysis.ccm.estimate_shift", "qualname": "GetMaxOptimizer.get_interpolated_px_value_interp2d", "kind": "function", "doc": "<p>Method to be used for calculating the interpolated values of cross correlation matrices.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>coords</strong>:  tuple of coordinates.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>float; value of cross correlation matrix at given coordinates.\n  For minimizer reasons -> negatives values become positive and positive become negative.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">coords</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"fullname": "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max", "modulename": "nanopyx.core.analysis.ccm.estimate_shift", "qualname": "GetMaxOptimizer.get_max", "kind": "function", "doc": "<p>Method used to calculate the maximum value and corresponding coordinates of a ccm. Uses a minimizer approach.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>tuple; coordinates of maximum value of ccm with subpixel precision</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.ccm.helper_functions": {"fullname": "nanopyx.core.analysis.ccm.helper_functions", "modulename": "nanopyx.core.analysis.ccm.helper_functions", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"fullname": "nanopyx.core.analysis.ccm.helper_functions.check_even_square", "modulename": "nanopyx.core.analysis.ccm.helper_functions", "qualname": "check_even_square", "kind": "function", "doc": "<p>Function used to check if an image array is an even square.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image_arr</strong>:  numpy array with shape (t, y, x)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>bool, True if an image array is an even square</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"fullname": "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size", "modulename": "nanopyx.core.analysis.ccm.helper_functions", "qualname": "get_closest_even_square_size", "kind": "function", "doc": "<p>Function used to calculate the closest even square.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image_arr</strong>:  numpy array with shape (t, y, x); image to be cropped</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>int; value of dimensions to be used for cropping</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"fullname": "nanopyx.core.analysis.ccm.helper_functions.make_even_square", "modulename": "nanopyx.core.analysis.ccm.helper_functions", "qualname": "make_even_square", "kind": "function", "doc": "<p>Function used to crop an image array into an even square.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image_arr</strong>:  numpy array with shape (t, y, x); image to be cropped</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>numpy array with shape (t, y, x)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.ccm.rcc": {"fullname": "nanopyx.core.analysis.ccm.rcc", "modulename": "nanopyx.core.analysis.ccm.rcc", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"fullname": "nanopyx.core.analysis.ccm.rcc.calculate_x_corr", "modulename": "nanopyx.core.analysis.ccm.rcc", "qualname": "calculate_x_corr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">im1</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">im2</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"fullname": "nanopyx.core.analysis.ccm.rcc.get_image_shift", "modulename": "nanopyx.core.analysis.ccm.rcc", "qualname": "get_image_shift", "kind": "function", "doc": "<p>Computes the shift from im1 to ima2</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">im1</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">im2</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">box</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">max_shift</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.ccm.rcc.rcc": {"fullname": "nanopyx.core.analysis.ccm.rcc.rcc", "modulename": "nanopyx.core.analysis.ccm.rcc", "qualname": "rcc", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">im_frames</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">max_shift</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"fullname": "nanopyx.core.analysis.ccm.rcc.minimize_shifts", "modulename": "nanopyx.core.analysis.ccm.rcc", "qualname": "minimize_shifts", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">shifts_x</span>, </span><span class=\"param\"><span class=\"n\">shifts_y</span>, </span><span class=\"param\"><span class=\"n\">shifts_z</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.pearson_correlation": {"fullname": "nanopyx.core.analysis.pearson_correlation", "modulename": "nanopyx.core.analysis.pearson_correlation", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"fullname": "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc", "modulename": "nanopyx.core.analysis.pearson_correlation", "qualname": "calculate_ppmcc", "kind": "function", "doc": "<p>Calculates the Pearson's correlation between two images after applying a shift.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>im1</strong>:  numpy array with shape (y, x)</li>\n<li><strong>im2</strong>:  numpy array with shape (y, x)</li>\n<li><strong>shift_x</strong>:  int; value to shift images in x dimension</li>\n<li><strong>shift_y</strong>:  int; value to shift images in y dimension</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>float; value of Pearson's Correlation function after shifting the two images.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"fullname": "nanopyx.core.analysis.pearson_correlation.pearson_correlation", "modulename": "nanopyx.core.analysis.pearson_correlation", "qualname": "pearson_correlation", "kind": "function", "doc": "<p>Calculates the Pearson's correlation between two images.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>im1</strong>:  numpy array with shape (y, x)</li>\n<li><strong>im2</strong>:  numpy array with shape (y, x)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>float; value of Pearson's correlation between two images</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.image": {"fullname": "nanopyx.core.image", "modulename": "nanopyx.core.image", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.image.blocks": {"fullname": "nanopyx.core.image.blocks", "modulename": "nanopyx.core.image.blocks", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"fullname": "nanopyx.core.image.blocks.assemble_frame_from_blocks", "modulename": "nanopyx.core.image.blocks", "qualname": "assemble_frame_from_blocks", "kind": "function", "doc": "<p>Function used to assemble a full image from blocks</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>blocks_stack</strong>:  numpy array with shape (n_blocks, y, x)</li>\n<li><strong>n_blocks_height</strong>:  int; number of blocks in y</li>\n<li><strong>n_blocks_width</strong>:  int; number of blocks in x</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>numpy array with shape (y<em>n_blocks, x</em>n_blocks)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">blocks_stack</span>, </span><span class=\"param\"><span class=\"n\">n_blocks_height</span>, </span><span class=\"param\"><span class=\"n\">n_blocks_width</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.io": {"fullname": "nanopyx.core.io", "modulename": "nanopyx.core.io", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.io.checksum": {"fullname": "nanopyx.core.io.checksum", "modulename": "nanopyx.core.io.checksum", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.io.checksum.get_checksum": {"fullname": "nanopyx.core.io.checksum.get_checksum", "modulename": "nanopyx.core.io.checksum", "qualname": "get_checksum", "kind": "function", "doc": "<p>Returns the SHA-256 checksum of the file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file_path</strong>:  path to the file</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>checksum in hexadecimal format</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "nanopyx.core.io.unique_names": {"fullname": "nanopyx.core.io.unique_names", "modulename": "nanopyx.core.io.unique_names", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.io.zip_image_loader": {"fullname": "nanopyx.core.io.zip_image_loader", "modulename": "nanopyx.core.io.zip_image_loader", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator": {"fullname": "nanopyx.core.io.zip_image_loader.ZipTiffIterator", "modulename": "nanopyx.core.io.zip_image_loader", "qualname": "ZipTiffIterator", "kind": "class", "doc": "<p></p>\n"}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"fullname": "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__", "modulename": "nanopyx.core.io.zip_image_loader", "qualname": "ZipTiffIterator.__init__", "kind": "function", "doc": "<p>Iterator to sequentially open tiff files contained in a zip file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>zip_file_path</strong>:  path to the zip file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">zip_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"fullname": "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape", "modulename": "nanopyx.core.io.zip_image_loader", "qualname": "ZipTiffIterator.get_shape", "kind": "function", "doc": "<p>Returns the shape of the image stack</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>shape of the image stack</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"fullname": "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype", "modulename": "nanopyx.core.io.zip_image_loader", "qualname": "ZipTiffIterator.get_dtype", "kind": "function", "doc": "<p>Returns the data type of the image stack</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>data type of the image stack</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"fullname": "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb", "modulename": "nanopyx.core.io.zip_image_loader", "qualname": "ZipTiffIterator.get_thumb", "kind": "function", "doc": "<p>Saves a thumbnail (first frame) of the image stack</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>save_path</strong>:  path to save the thumbnail</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">save_path</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"fullname": "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close", "modulename": "nanopyx.core.io.zip_image_loader", "qualname": "ZipTiffIterator.close", "kind": "function", "doc": "<p>Closes the zip file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.kernels": {"fullname": "nanopyx.core.kernels", "modulename": "nanopyx.core.kernels", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.sr": {"fullname": "nanopyx.core.sr", "modulename": "nanopyx.core.sr", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.sr.decorr": {"fullname": "nanopyx.core.sr.decorr", "modulename": "nanopyx.core.sr.decorr", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.sr.error_map": {"fullname": "nanopyx.core.sr.error_map", "modulename": "nanopyx.core.sr.error_map", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.sr.error_map.ErrorMap": {"fullname": "nanopyx.core.sr.error_map.ErrorMap", "modulename": "nanopyx.core.sr.error_map", "qualname": "ErrorMap", "kind": "class", "doc": "<p></p>\n"}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"fullname": "nanopyx.core.sr.error_map.ErrorMap.__init__", "modulename": "nanopyx.core.sr.error_map", "qualname": "ErrorMap.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"fullname": "nanopyx.core.sr.error_map.ErrorMap.optimise", "modulename": "nanopyx.core.sr.error_map", "qualname": "ErrorMap.optimise", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">imRef</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">imSR</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">fixedSigma</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "nanopyx.core.sr.error_map.ErrorMap.getRSE": {"fullname": "nanopyx.core.sr.error_map.ErrorMap.getRSE", "modulename": "nanopyx.core.sr.error_map", "qualname": "ErrorMap.getRSE", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "nanopyx.core.sr.error_map.ErrorMap.getRSP": {"fullname": "nanopyx.core.sr.error_map.ErrorMap.getRSP", "modulename": "nanopyx.core.sr.error_map", "qualname": "ErrorMap.getRSP", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"fullname": "nanopyx.core.sr.error_map.ErrorMap.get_sigma", "modulename": "nanopyx.core.sr.error_map", "qualname": "ErrorMap.get_sigma", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"fullname": "nanopyx.core.sr.error_map.calculate_alpha_beta", "modulename": "nanopyx.core.sr.error_map", "qualname": "calculate_alpha_beta", "kind": "function", "doc": "<p>Gaussian blurs imSR image and calculates linear regressino again imRef</p>\n\n<p>Args:\n    sigma (float): gaussian blur sigma\n    imRef (np.ndarray): reference image (generally a difraction limited equivalent)\n    imSR (np.ndarray): super-resolution image</p>\n\n<p>Returns:\n    tuple[float, float]: alpha and beta for linear regression</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sigma</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">imRef</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">imSR</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"fullname": "nanopyx.core.sr.error_map.sigma_function_to_optimize", "modulename": "nanopyx.core.sr.error_map", "qualname": "sigma_function_to_optimize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sigma</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">imRef</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">imSR</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "nanopyx.core.sr.esrrf": {"fullname": "nanopyx.core.sr.esrrf", "modulename": "nanopyx.core.sr.esrrf", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.sr.esrrf.CalculateRGC": {"fullname": "nanopyx.core.sr.esrrf.CalculateRGC", "modulename": "nanopyx.core.sr.esrrf", "qualname": "CalculateRGC", "kind": "class", "doc": "<p></p>\n"}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"fullname": "nanopyx.core.sr.esrrf.CalculateRGC.__init__", "modulename": "nanopyx.core.sr.esrrf", "qualname": "CalculateRGC.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "nanopyx.core.sr.esrrf.CalculateRGC.calculate": {"fullname": "nanopyx.core.sr.esrrf.CalculateRGC.calculate", "modulename": "nanopyx.core.sr.esrrf", "qualname": "CalculateRGC.calculate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.sr.frc": {"fullname": "nanopyx.core.sr.frc", "modulename": "nanopyx.core.sr.frc", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.sr.frc.ThresholdMethod": {"fullname": "nanopyx.core.sr.frc.ThresholdMethod", "modulename": "nanopyx.core.sr.frc", "qualname": "ThresholdMethod", "kind": "class", "doc": "<p></p>\n"}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"fullname": "nanopyx.core.sr.frc.ThresholdMethod.__init__", "modulename": "nanopyx.core.sr.frc", "qualname": "ThresholdMethod.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "nanopyx.core.sr.frc.pad": {"fullname": "nanopyx.core.sr.frc.pad", "modulename": "nanopyx.core.sr.frc", "qualname": "pad", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">im</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">height</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.sr.frc.calculate_frc_curve": {"fullname": "nanopyx.core.sr.frc.calculate_frc_curve", "modulename": "nanopyx.core.sr.frc", "qualname": "calculate_frc_curve", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">im1</span>, </span><span class=\"param\"><span class=\"n\">im2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.sr.frc.get_smoothed_curve": {"fullname": "nanopyx.core.sr.frc.get_smoothed_curve", "modulename": "nanopyx.core.sr.frc", "qualname": "get_smoothed_curve", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">frc_curve</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"fullname": "nanopyx.core.sr.frc.calculate_threshold_curve", "modulename": "nanopyx.core.sr.frc", "qualname": "calculate_threshold_curve", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">frc_curve</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">method</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.sr.frc.get_intersections": {"fullname": "nanopyx.core.sr.frc.get_intersections", "modulename": "nanopyx.core.sr.frc", "qualname": "get_intersections", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">frc_curve</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">threshold_curve</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.sr.frc.get_correct_intersection": {"fullname": "nanopyx.core.sr.frc.get_correct_intersection", "modulename": "nanopyx.core.sr.frc", "qualname": "get_correct_intersection", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">intersections</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">method</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.sr.frc.get_square_tapered_image": {"fullname": "nanopyx.core.sr.frc.get_square_tapered_image", "modulename": "nanopyx.core.sr.frc", "qualname": "get_square_tapered_image", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_image</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.sr.frc.get_window_function": {"fullname": "nanopyx.core.sr.frc.get_window_function", "modulename": "nanopyx.core.sr.frc", "qualname": "get_window_function", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">taper</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">size</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.sr.frc.get_interpolated_values": {"fullname": "nanopyx.core.sr.frc.get_interpolated_values", "modulename": "nanopyx.core.sr.frc", "qualname": "get_interpolated_values", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">images</span>, </span><span class=\"param\"><span class=\"n\">maxx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"fullname": "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve", "modulename": "nanopyx.core.sr.frc", "qualname": "calculate_fire_number_from_FRC_curve", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">frc_curve</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">method</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.sr.frc.calculate_fire_number": {"fullname": "nanopyx.core.sr.frc.calculate_fire_number", "modulename": "nanopyx.core.sr.frc", "qualname": "calculate_fire_number", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">im1</span>, </span><span class=\"param\"><span class=\"n\">im2</span>, </span><span class=\"param\"><span class=\"n\">method</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.sr.frc.do_plot": {"fullname": "nanopyx.core.sr.frc.do_plot", "modulename": "nanopyx.core.sr.frc", "qualname": "do_plot", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">frc_curve</span>, </span><span class=\"param\"><span class=\"n\">smooth_frc</span>, </span><span class=\"param\"><span class=\"n\">tm</span>, </span><span class=\"param\"><span class=\"n\">fire</span>, </span><span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.sr.srrf": {"fullname": "nanopyx.core.sr.srrf", "modulename": "nanopyx.core.sr.srrf", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.sr.srrf.CalculateRadiality": {"fullname": "nanopyx.core.sr.srrf.CalculateRadiality", "modulename": "nanopyx.core.sr.srrf", "qualname": "CalculateRadiality", "kind": "class", "doc": "<p></p>\n"}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"fullname": "nanopyx.core.sr.srrf.CalculateRadiality.__init__", "modulename": "nanopyx.core.sr.srrf", "qualname": "CalculateRadiality.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "nanopyx.core.sr.srrf.CalculateRadiality.calculate": {"fullname": "nanopyx.core.sr.srrf.CalculateRadiality.calculate", "modulename": "nanopyx.core.sr.srrf", "qualname": "CalculateRadiality.calculate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform": {"fullname": "nanopyx.core.transform", "modulename": "nanopyx.core.transform", "kind": "module", "doc": "<p>Transforms images, for example, zooming, shifting, ...</p>\n"}, "nanopyx.core.transform.binning": {"fullname": "nanopyx.core.transform.binning", "modulename": "nanopyx.core.transform.binning", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.transform.binning.rebin_2d": {"fullname": "nanopyx.core.transform.binning.rebin_2d", "modulename": "nanopyx.core.transform.binning", "qualname": "rebin_2d", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr: numpy array with any shape as long as last two dimensions are y, x (example</strong>:  time, channel, z, y, x)</li>\n<li><strong>bin_factor</strong>:  factor used to bin dimensions</li>\n<li><strong>mode</strong>:  can be either sum, mean or max, defaults to sum if not specified or not valid mode</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>binned array</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span>, </span><span class=\"param\"><span class=\"n\">bin_factor</span>, </span><span class=\"param\"><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;sum&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_add_random_noise": {"fullname": "nanopyx.core.transform.image_add_random_noise", "modulename": "nanopyx.core.transform.image_add_random_noise", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"fullname": "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise", "modulename": "nanopyx.core.transform.image_add_random_noise", "qualname": "addMixedGaussianPoissonNoise", "kind": "function", "doc": "<p>Add mixed Gaussian-Poisson noise to an image, pure cython version</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image</strong>:  The image to add noise to</li>\n<li><strong>gaussSigma</strong>:  The standard deviation of the Gaussian noise</li>\n<li><strong>gaussMean</strong>:  The mean of the Gaussian noise</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"fullname": "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2", "modulename": "nanopyx.core.transform.image_add_random_noise", "qualname": "addMixedGaussianPoissonNoise2", "kind": "function", "doc": "<p>Add mixed Gaussian-Poisson noise to an image, pure numpy version</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image</strong>:  The image to add noise to</li>\n<li><strong>gaussSigma</strong>:  The standard deviation of the Gaussian noise</li>\n<li><strong>gaussMean</strong>:  The mean of the Gaussian noise</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"fullname": "nanopyx.core.transform.image_add_random_noise.addPerlinNoise", "modulename": "nanopyx.core.transform.image_add_random_noise", "qualname": "addPerlinNoise", "kind": "function", "doc": "<p>Add perlin noise to an image</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image</strong>:  The image to add noise to</li>\n<li><strong>amp</strong>:  The amplitude of the noise</li>\n<li><strong>offset</strong>:  The offset of the noise</li>\n<li><strong>f</strong>:  The frequency of the noise</li>\n<li><strong>octaves</strong>:  The number of octaves</li>\n<li><strong>persistence</strong>:  The persistence of the noise</li>\n<li><strong>lacunarity</strong>:  The lacunarity of the noise</li>\n<li><strong>repeatx</strong>:  The repeat of the noise in the x direction</li>\n<li><strong>repeaty</strong>:  The repeat of the noise in the y direction</li>\n<li><strong>base</strong>:  The base of the noise</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"fullname": "nanopyx.core.transform.image_add_random_noise.getPerlinNoise", "modulename": "nanopyx.core.transform.image_add_random_noise", "qualname": "getPerlinNoise", "kind": "function", "doc": "<p>Return a perlin noise image</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>w</strong>:  The width of the image</li>\n<li><strong>h</strong>:  The height of the image</li>\n<li><strong>amp</strong>:  The amplitude of the noise</li>\n<li><strong>offset</strong>:  The offset of the noise</li>\n<li><strong>f</strong>:  The frequency of the noise</li>\n<li><strong>octaves</strong>:  The number of octaves</li>\n<li><strong>persistence</strong>:  The persistence of the noise</li>\n<li><strong>lacunarity</strong>:  The lacunarity of the noise</li>\n<li><strong>repeatx</strong>:  The repeat of the noise in the x direction</li>\n<li><strong>repeaty</strong>:  The repeat of the noise in the y direction</li>\n<li><strong>base</strong>:  The base of the noise</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The perlin noise image</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"fullname": "nanopyx.core.transform.image_add_random_noise.getSimplexNoise", "modulename": "nanopyx.core.transform.image_add_random_noise", "qualname": "getSimplexNoise", "kind": "function", "doc": "<p>Return a simplex noise image\nREF: <a href=\"https://github.com/lmas/opensimplex\">https://github.com/lmas/opensimplex</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>w</strong>:  The width of the image</li>\n<li><strong>h</strong>:  The height of the image</li>\n<li><strong>f</strong>:  The frequency of the noise</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The simplex noise image</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"fullname": "nanopyx.core.transform.image_add_random_noise.addSquares", "modulename": "nanopyx.core.transform.image_add_random_noise", "qualname": "addSquares", "kind": "function", "doc": "<p>Add random squares to an image</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image</strong>:  The image to add the squares to</li>\n<li><strong>vmax</strong>:  The maximum intensity value of the squares</li>\n<li><strong>vmin</strong>:  The minimum intensity value of the squares</li>\n<li><strong>nSquares</strong>:  The number of squares to add</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"fullname": "nanopyx.core.transform.image_add_random_noise.getSquares", "modulename": "nanopyx.core.transform.image_add_random_noise", "qualname": "getSquares", "kind": "function", "doc": "<p>Return an image with random squares</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>w</strong>:  The width of the image</li>\n<li><strong>h</strong>:  The height of the image</li>\n<li><strong>vmax</strong>:  The maximum intensity value of the squares</li>\n<li><strong>vmin</strong>:  The minimum intensity value of the squares</li>\n<li><strong>nSquares</strong>:  The number of squares to add</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The image with random squares</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"fullname": "nanopyx.core.transform.image_add_random_noise.addRamp", "modulename": "nanopyx.core.transform.image_add_random_noise", "qualname": "addRamp", "kind": "function", "doc": "<p>Adds a ramp from vmin to vmax to the image</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image</strong>:  The image to add the ramp to</li>\n<li><strong>vmax</strong>:  The maximum intensity value of the ramp</li>\n<li><strong>vmin</strong>:  The minimum intensity value of the ramp</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"fullname": "nanopyx.core.transform.image_add_random_noise.getRamp", "modulename": "nanopyx.core.transform.image_add_random_noise", "qualname": "getRamp", "kind": "function", "doc": "<p>Returns a 2D array of size (w, h) with a ramp from vmin to vmax</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>w</strong>:  The width of the image</li>\n<li><strong>h</strong>:  The height of the image</li>\n<li><strong>vmax</strong>:  The maximum intensity value of the ramp</li>\n<li><strong>vmin</strong>:  The minimum intensity value of the ramp</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The image with the ramp</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"fullname": "nanopyx.core.transform.image_add_random_noise.test_logFactorial", "modulename": "nanopyx.core.transform.image_add_random_noise", "qualname": "test_logFactorial", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_magnify": {"fullname": "nanopyx.core.transform.image_magnify", "modulename": "nanopyx.core.transform.image_magnify", "kind": "module", "doc": "<p>Combination of functions for zooming an image, using several interpolation methods.</p>\n"}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"fullname": "nanopyx.core.transform.image_magnify.fourier_zoom", "modulename": "nanopyx.core.transform.image_magnify", "qualname": "fourier_zoom", "kind": "function", "doc": "<p>Zoom an image by zero-padding its Discrete Fourier transform.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image</strong>:  2D grid of pixel values.</li>\n<li><strong>magnification</strong>:  Factor by which to multiply the dimensions of the image.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>zoomed image.</p>\n</blockquote>\n\n<p>REF: based on <a href=\"https://github.com/centreborelli/fourier\">https://github.com/centreborelli/fourier</a>\nCredit goes to Carlo de Franchis <a href=\"&#x6d;&#x61;&#x69;&#x6c;&#x74;&#111;&#58;&#x63;&#x61;&#114;&#x6c;&#x6f;&#46;d&#x65;&#x2d;&#102;&#114;&#97;&#x6e;&#99;&#x68;&#x69;&#115;&#x40;&#x65;&#110;&#x73;&#45;&#x70;&#97;&#x72;&#105;&#115;&#x2d;&#x73;&#x61;&#99;&#x6c;&#97;&#121;&#46;&#102;r\">&#x63;&#x61;&#114;&#x6c;&#x6f;&#46;d&#x65;&#x2d;&#102;&#114;&#97;&#x6e;&#99;&#x68;&#x69;&#115;&#x40;&#x65;&#110;&#x73;&#45;&#x70;&#97;&#x72;&#105;&#115;&#x2d;&#x73;&#x61;&#99;&#x6c;&#97;&#121;&#46;&#102;r</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"fullname": "nanopyx.core.transform.image_magnify.catmull_rom_zoom", "modulename": "nanopyx.core.transform.image_magnify", "qualname": "catmull_rom_zoom", "kind": "function", "doc": "<p>Zoom an image by Catmull-Rom interpolation</p>\n\n<p>Args:\n    image (np.ndarray): 2D grid of pixel values.\n    magnification (float): Factor by which to multiply the dimensions of the image.\n        Must be &gt;= 1.</p>\n\n<p>Returns:\n    np.ndarray: zoomed image.</p>\n\n<p>REF: based on <a href=\"https://github.com/HenriquesLab/NanoJ-SRRF/blob/master/SRRF/src/nanoj/srrf/java/SRRF.java\">https://github.com/HenriquesLab/NanoJ-SRRF/blob/master/SRRF/src/nanoj/srrf/java/SRRF.java</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"fullname": "nanopyx.core.transform.image_magnify.lanczos_zoom", "modulename": "nanopyx.core.transform.image_magnify", "qualname": "lanczos_zoom", "kind": "function", "doc": "<p>Zoom an image by Lanczos interpolation</p>\n\n<p>Args:\n    image (np.ndarray): 2D grid of pixel values.\n    magnification (float): Factor by which to multiply the dimensions of the image.\n        Must be &gt;= 1.\n    taps (int): The number of taps (interpolation points) to use in the Lanczos kernel.</p>\n\n<p>Returns:\n    np.ndarray: zoomed image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"fullname": "nanopyx.core.transform.image_magnify.bicubic_zoom", "modulename": "nanopyx.core.transform.image_magnify", "qualname": "bicubic_zoom", "kind": "function", "doc": "<p>Zoom an image by bicubic interpolation</p>\n\n<p>Args:\n    image (np.ndarray): 2D grid of pixel values.\n    magnification (float): Factor by which to multiply the dimensions of the image.\n        Must be &gt;= 1.</p>\n\n<p>Returns:\n    np.ndarray: zoomed image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"fullname": "nanopyx.core.transform.image_magnify.bilinear_zoom", "modulename": "nanopyx.core.transform.image_magnify", "qualname": "bilinear_zoom", "kind": "function", "doc": "<p>Zoom an image by bilinear interpolation</p>\n\n<p>Args:\n    image (np.ndarray): 2D grid of pixel values.\n    magnification (float): Factor by which to multiply the dimensions of the image.\n        Must be &gt;= 1.</p>\n\n<p>Returns:\n    np.ndarray: zoomed image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"fullname": "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom", "modulename": "nanopyx.core.transform.image_magnify", "qualname": "nearest_neighbor_zoom", "kind": "function", "doc": "<p>Zoom an image by nearest neighbor interpolation</p>\n\n<p>Args:\n    image (np.ndarray): 2D grid of pixel values.\n    magnification (float): Factor by which to multiply the dimensions of the image.\n        Must be &gt;= 1.</p>\n\n<p>Returns:\n    np.ndarray: zoomed image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"fullname": "nanopyx.core.transform.image_magnify.scipy_zoom", "modulename": "nanopyx.core.transform.image_magnify", "qualname": "scipy_zoom", "kind": "function", "doc": "<p>Zoom an image by SciPy interpolation</p>\n\n<p>Args:\n    image (np.ndarray): 2D grid of pixel values.\n    magnification (float): Factor by which to multiply the dimensions of the image.\n        Must be &gt;= 1.</p>\n\n<p>Returns:\n    np.ndarray: zoomed image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"fullname": "nanopyx.core.transform.image_magnify.skimage_zoom", "modulename": "nanopyx.core.transform.image_magnify", "qualname": "skimage_zoom", "kind": "function", "doc": "<p>Zoom an image by scikit-image interpolation</p>\n\n<p>Args:\n    image (np.ndarray): 2D grid of pixel values.\n    magnification (float): Factor by which to multiply the dimensions of the image.\n        Must be &gt;= 1.</p>\n\n<p>Returns:\n    np.ndarray: zoomed image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"fullname": "nanopyx.core.transform.image_magnify.cv2_zoom", "modulename": "nanopyx.core.transform.image_magnify", "qualname": "cv2_zoom", "kind": "function", "doc": "<p>Zoom an image by OpenCV interpolation</p>\n\n<p>Args:\n    image (np.ndarray): 2D grid of pixel values.\n    magnification (float): Factor by which to multiply the dimensions of the image.\n        Must be &gt;= 1.</p>\n\n<p>Returns:\n    np.ndarray: zoomed image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.image_shift": {"fullname": "nanopyx.core.transform.image_shift", "modulename": "nanopyx.core.transform.image_shift", "kind": "module", "doc": "<p>Combination of functions for shifting an image, using several interpolation methods.</p>\n"}, "nanopyx.core.transform.interpolation": {"fullname": "nanopyx.core.transform.interpolation", "modulename": "nanopyx.core.transform.interpolation", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.transform.interpolation.bicubic": {"fullname": "nanopyx.core.transform.interpolation.bicubic", "modulename": "nanopyx.core.transform.interpolation.bicubic", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.transform.interpolation.bicubic.Interpolator": {"fullname": "nanopyx.core.transform.interpolation.bicubic.Interpolator", "modulename": "nanopyx.core.transform.interpolation.bicubic", "qualname": "Interpolator", "kind": "class", "doc": "<p></p>\n", "bases": "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator"}, "nanopyx.core.transform.interpolation.bilinear": {"fullname": "nanopyx.core.transform.interpolation.bilinear", "modulename": "nanopyx.core.transform.interpolation.bilinear", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"fullname": "nanopyx.core.transform.interpolation.bilinear.Interpolator", "modulename": "nanopyx.core.transform.interpolation.bilinear", "qualname": "Interpolator", "kind": "class", "doc": "<p></p>\n", "bases": "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator"}, "nanopyx.core.transform.interpolation.catmull_rom": {"fullname": "nanopyx.core.transform.interpolation.catmull_rom", "modulename": "nanopyx.core.transform.interpolation.catmull_rom", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"fullname": "nanopyx.core.transform.interpolation.catmull_rom.Interpolator", "modulename": "nanopyx.core.transform.interpolation.catmull_rom", "qualname": "Interpolator", "kind": "class", "doc": "<p></p>\n", "bases": "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator"}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"fullname": "nanopyx.core.transform.interpolation.catmull_rom.interpolate", "modulename": "nanopyx.core.transform.interpolation.catmull_rom", "qualname": "interpolate", "kind": "function", "doc": "<p>Interpolate image using Catmull-Rom interpolation</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>im</strong>:  image to interpolate</li>\n<li><strong>x</strong>:  x-coordinate to interpolate at</li>\n<li><strong>y</strong>:  y-coordinate to interpolate at</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Interpolated pixel value (float)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.interpolation.fft_zoom": {"fullname": "nanopyx.core.transform.interpolation.fft_zoom", "modulename": "nanopyx.core.transform.interpolation.fft_zoom", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"fullname": "nanopyx.core.transform.interpolation.fft_zoom.magnify", "modulename": "nanopyx.core.transform.interpolation.fft_zoom", "qualname": "magnify", "kind": "function", "doc": "<p>Zoom an image by zero-padding its Discrete Fourier transform</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image</strong>:  2D grid of pixel values</li>\n<li><strong>magnification</strong>:  factor by which to multiply the dimensions of the image</li>\n<li><strong>enforce_same_value</strong>:  if True, the value of the original samples will be preserved</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>zoomed image</p>\n</blockquote>\n\n<p>REF: based on <a href=\"https://github.com/centreborelli/fourier\">https://github.com/centreborelli/fourier</a>\nCredit goes to Carlo de Franchis <a href=\"mai&#108;&#x74;o&#58;&#99;&#97;&#114;&#108;&#x6f;&#x2e;&#x64;&#101;&#45;&#x66;r&#x61;&#110;&#99;&#104;&#x69;&#x73;&#64;&#101;&#x6e;&#x73;&#x2d;&#112;&#x61;&#114;i&#x73;&#45;&#115;&#97;&#x63;&#108;&#97;&#x79;&#x2e;&#x66;&#114;\">&#99;&#97;&#114;&#108;&#x6f;&#x2e;&#x64;&#101;&#45;&#x66;r&#x61;&#110;&#99;&#104;&#x69;&#x73;&#64;&#101;&#x6e;&#x73;&#x2d;&#112;&#x61;&#114;i&#x73;&#45;&#115;&#97;&#x63;&#108;&#97;&#x79;&#x2e;&#x66;&#114;</a></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">magnification</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">enforce_same_value</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.interpolation.lanczos": {"fullname": "nanopyx.core.transform.interpolation.lanczos", "modulename": "nanopyx.core.transform.interpolation.lanczos", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"fullname": "nanopyx.core.transform.interpolation.lanczos.Interpolator", "modulename": "nanopyx.core.transform.interpolation.lanczos", "qualname": "Interpolator", "kind": "class", "doc": "<p></p>\n", "bases": "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator"}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"fullname": "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__", "modulename": "nanopyx.core.transform.interpolation.lanczos", "qualname": "Interpolator.__init__", "kind": "function", "doc": "<p>Interpolate the value of a 2D image at the given coordinates using the Lanczos interpolation method</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image</strong>:  The 2D image to interpolate</li>\n<li><strong>taps</strong>:  The number of taps (interpolation points) to use in the Lanczos kernel</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "nanopyx.core.transform.interpolation.nearest_neighbor": {"fullname": "nanopyx.core.transform.interpolation.nearest_neighbor", "modulename": "nanopyx.core.transform.interpolation.nearest_neighbor", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator": {"fullname": "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator", "modulename": "nanopyx.core.transform.interpolation.nearest_neighbor", "qualname": "Interpolator", "kind": "class", "doc": "<p></p>\n"}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"fullname": "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__", "modulename": "nanopyx.core.transform.interpolation.nearest_neighbor", "qualname": "Interpolator.__init__", "kind": "function", "doc": "<p>Interpolate a 2D array</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image</strong>:  2D array to interpolate</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"fullname": "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify", "modulename": "nanopyx.core.transform.interpolation.nearest_neighbor", "qualname": "Interpolator.magnify", "kind": "function", "doc": "<p>Magnify an image by a factor of magnification</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>magnification</strong>:  magnification factor</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>magnified image</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"fullname": "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift", "modulename": "nanopyx.core.transform.interpolation.nearest_neighbor", "qualname": "Interpolator.shift", "kind": "function", "doc": "<p>Shift an image by (dx, dy) using interpolation</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dx</strong>:  shift along x-axis</li>\n<li><strong>dy</strong>:  shift along y-axis</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>shifted image</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.transform.translation": {"fullname": "nanopyx.core.transform.translation", "modulename": "nanopyx.core.transform.translation", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.transform.translation.translate_array": {"fullname": "nanopyx.core.transform.translation.translate_array", "modulename": "nanopyx.core.transform.translation", "qualname": "translate_array", "kind": "function", "doc": "<p>Translate an array of images using the drift data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.utils": {"fullname": "nanopyx.core.utils", "modulename": "nanopyx.core.utils", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.utils.data": {"fullname": "nanopyx.core.utils.data", "modulename": "nanopyx.core.utils.data", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.utils.imagegenerator": {"fullname": "nanopyx.core.utils.imagegenerator", "modulename": "nanopyx.core.utils.imagegenerator", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.utils.imagegenerator.beads": {"fullname": "nanopyx.core.utils.imagegenerator.beads", "modulename": "nanopyx.core.utils.imagegenerator.beads", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"fullname": "nanopyx.core.utils.imagegenerator.beads.generate_random_position", "modulename": "nanopyx.core.utils.imagegenerator.beads", "qualname": "generate_random_position", "kind": "function", "doc": "<p>Generates a random position given number of rows and columns.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>n_rows</strong>:  int; number of rows</li>\n<li><strong>n_cols</strong>:  int; number of columns</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>int, int; random position constrained to 0.1 and 0.9 of n_rows and n_cols</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n_rows</span>, </span><span class=\"param\"><span class=\"n\">n_cols</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"fullname": "nanopyx.core.utils.imagegenerator.beads.generate_image", "modulename": "nanopyx.core.utils.imagegenerator.beads", "qualname": "generate_image", "kind": "function", "doc": "<p>Generates a random image with objects in random positions</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>n_objects</strong>:  int; number of objects to generate</li>\n<li><strong>shape</strong>:  tuple; with shape (z, y, x)</li>\n<li><strong>dtype</strong>:  data type to be used in the generated numpy array</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>numpy array with shape (z, y, x) and defined data type and n_objects</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n_objects</span><span class=\"o\">=</span><span class=\"mi\">10</span>, </span><span class=\"param\"><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">)</span>, </span><span class=\"param\">dtype=&lt;class &#x27;numpy.float16&#x27;&gt;</span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"fullname": "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift", "modulename": "nanopyx.core.utils.imagegenerator.beads", "qualname": "generate_timelapse_drift", "kind": "function", "doc": "<p>Generate random timelapse image with drift over time.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>n_objects</strong>:  int; number of objects to generate</li>\n<li><strong>shape</strong>:  tuple; with shape (t, y, x)</li>\n<li><strong>dtype</strong>:  data type to be used in the generated numpy array</li>\n<li><strong>drift</strong>:  None or int; number of pixels corresponding to drift between frames. If None, automatic drift is\ncalculated based on 0.02 of image dimensions.</li>\n<li><strong>drift_mode</strong>:  str; \"directional\" (default) or \"random\";</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>numpy array with shape (t, y, x) and defined data type and n_objects</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">n_objects</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">)</span>,</span><span class=\"param\">\tdtype=&lt;class &#x27;numpy.float16&#x27;&gt;,</span><span class=\"param\">\t<span class=\"n\">drift</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">drift_mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;directional&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"fullname": "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment", "modulename": "nanopyx.core.utils.imagegenerator.beads", "qualname": "generate_channel_misalignment", "kind": "function", "doc": "<p>Generates an image with shape (3, 300, 300) with 1 object centered on each 3x3 block of the image.\nSlices corresponding to channel 2 and 3 are shifted relative to channel 1.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>numpy array of shape (3, 300, 300) corresponding to a random image with misalignment between channels.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.utils.logo": {"fullname": "nanopyx.core.utils.logo", "modulename": "nanopyx.core.utils.logo", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.utils.logo.print_ascii_logo": {"fullname": "nanopyx.core.utils.logo.print_ascii_logo", "modulename": "nanopyx.core.utils.logo", "qualname": "print_ascii_logo", "kind": "function", "doc": "<p>Prints the nanopyx logo. Oink! Oink!</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.utils.time": {"fullname": "nanopyx.core.utils.time", "modulename": "nanopyx.core.utils.time", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.utils.time.timeit": {"fullname": "nanopyx.core.utils.time.timeit", "modulename": "nanopyx.core.utils.time.timeit", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.core.utils.time.timeit.timeit": {"fullname": "nanopyx.core.utils.time.timeit.timeit", "modulename": "nanopyx.core.utils.time.timeit", "qualname": "timeit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">function</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.core.utils.time.timeit.timeit2": {"fullname": "nanopyx.core.utils.time.timeit.timeit2", "modulename": "nanopyx.core.utils.time.timeit", "qualname": "timeit2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.data": {"fullname": "nanopyx.data", "modulename": "nanopyx.data", "kind": "module", "doc": "<p>Contains helper methods for downloading and loading example test data</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">nanopyx.data.download</span> <span class=\"kn\">import</span> <span class=\"n\">ExampleDataManager</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">downloader</span> <span class=\"o\">=</span> <span class=\"n\">ExampleDataManager</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">datasets</span> <span class=\"o\">=</span> <span class=\"n\">downloader</span><span class=\"o\">.</span><span class=\"n\">list_datasets</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"s2\">&quot; - &quot;</span><span class=\"o\">+</span><span class=\"n\">dataset</span> <span class=\"k\">for</span> <span class=\"n\">dataset</span> <span class=\"ow\">in</span> <span class=\"n\">datasets</span><span class=\"p\">]))</span>\n<span class=\"go\"> - LongContinuous_UtrGFP</span>\n<span class=\"go\"> - PumpyCost7_UtrGFP</span>\n<span class=\"go\"> - SMLMS2013_HDTubulinAlexa647</span>\n<span class=\"go\"> - SM_U2OS_Pereira_MTAlexaA647_V1</span>\n<span class=\"go\"> - ShortContinuous_UtrGFP</span>\n<span class=\"go\"> - EMBL_TubulinGFP</span>\n<span class=\"go\"> - ImmunoSynapseFormation_LifeActGFP</span>\n<span class=\"go\"> - SM_U2OS_Pereira_MTAlexaA647_V2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">thumbnail_path</span> <span class=\"o\">=</span> <span class=\"n\">downloader</span><span class=\"o\">.</span><span class=\"n\">get_thumbnail</span><span class=\"p\">(</span><span class=\"s2\">&quot;LongContinuous_UtrGFP&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s2\">&quot;/&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"s2\">&quot;...&quot;</span><span class=\"p\">]</span><span class=\"o\">+</span><span class=\"n\">thumbnail_path</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">:])</span>\n<span class=\"go\">&#39;.../nanopyx/data/examples/LongContinuous_UtrGFP/thumbnail.jpg&#39;</span>\n</code></pre>\n</div>\n"}, "nanopyx.data.download": {"fullname": "nanopyx.data.download", "modulename": "nanopyx.data.download", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.data.download.ExampleDataManager": {"fullname": "nanopyx.data.download.ExampleDataManager", "modulename": "nanopyx.data.download", "qualname": "ExampleDataManager", "kind": "class", "doc": "<p></p>\n"}, "nanopyx.data.download.ExampleDataManager.__init__": {"fullname": "nanopyx.data.download.ExampleDataManager.__init__", "modulename": "nanopyx.data.download", "qualname": "ExampleDataManager.__init__", "kind": "function", "doc": "<p>Helper class for downloading example test data</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>to_download_path</strong>:  path to download the data to. If to_download_path is None, a temporary directory will be created. Note that it will not be automatically deleted.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>:  If to_download_path is not None and does not exist</li>\n</ul>\n\n<p>To clear downloads use self._clear_download()</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">to_download_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"fullname": "nanopyx.data.download.ExampleDataManager.list_datasets", "modulename": "nanopyx.data.download", "qualname": "ExampleDataManager.list_datasets", "kind": "function", "doc": "<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list of dataset labels</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"fullname": "nanopyx.data.download.ExampleDataManager.list_datasets_nickname", "modulename": "nanopyx.data.download", "qualname": "ExampleDataManager.list_datasets_nickname", "kind": "function", "doc": "<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>list of dataset nicknames</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"fullname": "nanopyx.data.download.ExampleDataManager.get_dataset_info", "modulename": "nanopyx.data.download", "qualname": "ExampleDataManager.get_dataset_info", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dataset_name</strong>:  can be a dataset label or nickname</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>dictionary with information about the dataset</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dataset_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"fullname": "nanopyx.data.download.ExampleDataManager.download_tiff_sequence", "modulename": "nanopyx.data.download", "qualname": "ExampleDataManager.download_tiff_sequence", "kind": "function", "doc": "<p>Downloads the tiff sequence and returns the path to the zip file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dataset_name</strong>:  can be a dataset label or nickname</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>path to the zip file</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dataset_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"fullname": "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator", "modulename": "nanopyx.data.download", "qualname": "ExampleDataManager.get_ZipTiffIterator", "kind": "function", "doc": "<p>Downloads the tiff sequence and returns the ZipTiffIterator</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dataset_name</strong>:  can be a dataset label or nickname</li>\n<li><strong>as_ndarray</strong>:  if True, returns a numpy array instead of a ZipTiffIterator</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>ZipTiffIterator or numpy array</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dataset_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">as_ndarray</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">nanopyx</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">zip_image_loader</span><span class=\"o\">.</span><span class=\"n\">ZipTiffIterator</span>:</span></span>", "funcdef": "def"}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"fullname": "nanopyx.data.download.ExampleDataManager.get_thumbnail", "modulename": "nanopyx.data.download", "qualname": "ExampleDataManager.get_thumbnail", "kind": "function", "doc": "<p>Returns the path to the thumbnail</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dataset_name</strong>:  can be a dataset label or nickname</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>path to the thumbnail</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dataset_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "nanopyx.data.download.ExampleDataManager.clear_downloads": {"fullname": "nanopyx.data.download.ExampleDataManager.clear_downloads", "modulename": "nanopyx.data.download", "qualname": "ExampleDataManager.clear_downloads", "kind": "function", "doc": "<p>Deletes all downloaded datasets</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.data.examples": {"fullname": "nanopyx.data.examples", "modulename": "nanopyx.data.examples", "kind": "module", "doc": "<p>Placeholder for containing the example test data. Within this package folder is the metadata information for each test dataset\nSee <code>nanopyx.data.download</code> for tools to download the example data</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">os</span><span class=\"o\">,</span> <span class=\"nn\">glob</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">get_path</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s2\">&quot;/&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">:])</span>\n<span class=\"go\">&#39;nanopyx/data/examples&#39;</span>\n</code></pre>\n</div>\n"}, "nanopyx.data.examples.get_path": {"fullname": "nanopyx.data.examples.get_path", "modulename": "nanopyx.data.examples", "qualname": "get_path", "kind": "function", "doc": "<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>path to the examples info directory</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "nanopyx.methods": {"fullname": "nanopyx.methods", "modulename": "nanopyx.methods", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.methods.channel_registration": {"fullname": "nanopyx.methods.channel_registration", "modulename": "nanopyx.methods.channel_registration", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"fullname": "nanopyx.methods.channel_registration.estimate_channel_registration", "modulename": "nanopyx.methods.channel_registration", "qualname": "estimate_channel_registration", "kind": "function", "doc": "<p>Function used to estimate shift between different color channels and align them of an image based on cross correlation.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image_array</strong>: numpy array  with shape (n_channels, y, x); image to be corrected</li>\n<li><strong>ref_channel</strong>:  int; channel index to be used as reference</li>\n<li><strong>max_shift</strong>:  int; maximum shift accepted for correction, in pixels.</li>\n<li><strong>blocks_per_axis</strong>:  int; number of blocks to divide the image in both x and y dimensions</li>\n<li><strong>min_similarity</strong>:  float; minimum value of similarity to accept a shift as a correction</li>\n<li><strong>method</strong>:  str; \"subpixel\" (default) or \"max\"; subpixel uses a minimizer to find the maximum correlation with\nsubpixel precision, max simply takes the maximum of the cross correlation map</li>\n<li><strong>save_translation_masks</strong>:  bool, defaults to True; whether to save translation masks as a tif or not</li>\n<li><strong>translation_mask_save_path</strong>:  str; path where to save translation masks</li>\n<li><strong>save_ccms</strong>:  bool, defaults to True; whether to save cross correlation matrices as a tif or not</li>\n<li><strong>ccms_save_path</strong>:  str; path where to save cross correlation matrices</li>\n<li><strong>apply</strong>:  bool; whether to apply the correction if True or only estimate if False</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>if apply==True, returns corrected image with shape (c, y, x)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.channel_registration.apply_channel_registration": {"fullname": "nanopyx.methods.channel_registration.apply_channel_registration", "modulename": "nanopyx.methods.channel_registration", "qualname": "apply_channel_registration", "kind": "function", "doc": "<p>Function used to align different color channels of an image based on cross correlation.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image_array</strong>:  numpy array with shape (n_channels, y, x); image to be registered</li>\n<li><strong>translation_masks</strong>:  numpy array of translation masks</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>returns corrected image with shape (c, y, x)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.channel_registration.corrector": {"fullname": "nanopyx.methods.channel_registration.corrector", "modulename": "nanopyx.methods.channel_registration.corrector", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector": {"fullname": "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector", "modulename": "nanopyx.methods.channel_registration.corrector", "qualname": "ChannelRegistrationCorrector", "kind": "class", "doc": "<p></p>\n"}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"fullname": "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__", "modulename": "nanopyx.methods.channel_registration.corrector", "qualname": "ChannelRegistrationCorrector.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"fullname": "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks", "modulename": "nanopyx.methods.channel_registration.corrector", "qualname": "ChannelRegistrationCorrector.load_translation_masks", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"fullname": "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels", "modulename": "nanopyx.methods.channel_registration.corrector", "qualname": "ChannelRegistrationCorrector.align_channels", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">img_stack</span>, </span><span class=\"param\"><span class=\"n\">translation_masks</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.channel_registration.estimator": {"fullname": "nanopyx.methods.channel_registration.estimator", "modulename": "nanopyx.methods.channel_registration.estimator", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator": {"fullname": "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator", "modulename": "nanopyx.methods.channel_registration.estimator", "qualname": "ChannelRegistrationEstimator", "kind": "class", "doc": "<p></p>\n"}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"fullname": "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__", "modulename": "nanopyx.methods.channel_registration.estimator", "qualname": "ChannelRegistrationEstimator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"fullname": "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform", "modulename": "nanopyx.methods.channel_registration.estimator", "qualname": "ChannelRegistrationEstimator.apply_elastic_transform", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">img_stack</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"fullname": "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation", "modulename": "nanopyx.methods.channel_registration.estimator", "qualname": "ChannelRegistrationEstimator.calculate_translation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">channel_to_align</span>,</span><span class=\"param\">\t<span class=\"n\">ref_channel_img</span>,</span><span class=\"param\">\t<span class=\"n\">max_shift</span>,</span><span class=\"param\">\t<span class=\"n\">blocks_per_axis</span>,</span><span class=\"param\">\t<span class=\"n\">min_similarity</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">&#39;subpixel&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"fullname": "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask", "modulename": "nanopyx.methods.channel_registration.estimator", "qualname": "ChannelRegistrationEstimator.save_translation_mask", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"fullname": "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms", "modulename": "nanopyx.methods.channel_registration.estimator", "qualname": "ChannelRegistrationEstimator.save_ccms", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"fullname": "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate", "modulename": "nanopyx.methods.channel_registration.estimator", "qualname": "ChannelRegistrationEstimator.estimate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">img_stack</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">ref_channel</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">max_shift</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">blocks_per_axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">min_similarity</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;subpixel&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">save_translation_masks</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">translation_mask_save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">save_ccms</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">ccms_save_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">apply</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment": {"fullname": "nanopyx.methods.drift_alignment", "modulename": "nanopyx.methods.drift_alignment", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"fullname": "nanopyx.methods.drift_alignment.estimate_drift_alignment", "modulename": "nanopyx.methods.drift_alignment", "qualname": "estimate_drift_alignment", "kind": "function", "doc": "<p>Function use to estimate the drift in a microscopy image.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image_array</strong>:  numpy array  with shape (z, y, x)</li>\n<li><strong>save_as_npy (optional)</strong>:  bool, whether to save as npy (if true) or csv (if false)</li>\n<li><strong>save_drift_table_path (optional)</strong>:  str, path to save drift table</li>\n<li><strong>roi (optional)</strong>:  in case of use should have shape (x0, y0, x1, y1)</li>\n<li><strong>kwargs</strong>:  additional keyword arguments</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>aligned image as numpy array</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"fullname": "nanopyx.methods.drift_alignment.apply_drift_alignment", "modulename": "nanopyx.methods.drift_alignment", "qualname": "apply_drift_alignment", "kind": "function", "doc": "<p>Function used to correct the drift in a microscopy image given a previously calculated drift table.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image_array</strong>:  numpy array  with shape (z, y, x); image to be corrected</li>\n<li><strong>path (optional)</strong>:  str; path to previously saved</li>\n<li><strong>drift_table (optional)</strong>:  estimator table object; object containing previously calculated drift table</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>aligned image as numpy array</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.corrector": {"fullname": "nanopyx.methods.drift_alignment.corrector", "modulename": "nanopyx.methods.drift_alignment.corrector", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"fullname": "nanopyx.methods.drift_alignment.corrector.DriftCorrector", "modulename": "nanopyx.methods.drift_alignment.corrector", "qualname": "DriftCorrector", "kind": "class", "doc": "<p>Main class for aligning timelapse images with drift.\nRequired previous calculation of a drift table.\nImplements the following methods:</p>\n\n<ul>\n<li>apply_correction</li>\n<li>load_drift_table</li>\n<li>_translate_slice</li>\n</ul>\n"}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"fullname": "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__", "modulename": "nanopyx.methods.drift_alignment.corrector", "qualname": "DriftCorrector.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"fullname": "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction", "modulename": "nanopyx.methods.drift_alignment.corrector", "qualname": "DriftCorrector.apply_correction", "kind": "function", "doc": "<p>Main method of DriftCorrector class.\nTranslates each image slice according to the drift table.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image_array</strong>:  numpy array with shape (n_slices, rows, columns)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>aligned image array with shape (n_slices, rows, columns)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"fullname": "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table", "modulename": "nanopyx.methods.drift_alignment.corrector", "qualname": "DriftCorrector.load_estimator_table", "kind": "function", "doc": "<p>Method used to load the drift table.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong>:  path to a .csv or .npy drift table</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>None, stores drift table data in self.drift_table</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.estimator": {"fullname": "nanopyx.methods.drift_alignment.estimator", "modulename": "nanopyx.methods.drift_alignment.estimator", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator": {"fullname": "nanopyx.methods.drift_alignment.estimator.DriftEstimator", "modulename": "nanopyx.methods.drift_alignment.estimator", "qualname": "DriftEstimator", "kind": "class", "doc": "<p></p>\n"}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"fullname": "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__", "modulename": "nanopyx.methods.drift_alignment.estimator", "qualname": "DriftEstimator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"fullname": "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate", "modulename": "nanopyx.methods.drift_alignment.estimator", "qualname": "DriftEstimator.estimate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"fullname": "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging", "modulename": "nanopyx.methods.drift_alignment.estimator", "qualname": "DriftEstimator.compute_temporal_averaging", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">image_arr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"fullname": "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice", "modulename": "nanopyx.methods.drift_alignment.estimator", "qualname": "DriftEstimator.get_shift_from_ccm_slice", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">slice_index</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"fullname": "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm", "modulename": "nanopyx.methods.drift_alignment.estimator", "qualname": "DriftEstimator.get_shifts_from_ccm", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"fullname": "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table", "modulename": "nanopyx.methods.drift_alignment.estimator", "qualname": "DriftEstimator.create_drift_table", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"fullname": "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table", "modulename": "nanopyx.methods.drift_alignment.estimator", "qualname": "DriftEstimator.save_drift_table", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">save_as_npy</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"fullname": "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params", "modulename": "nanopyx.methods.drift_alignment.estimator", "qualname": "DriftEstimator.set_estimator_params", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.estimator_table": {"fullname": "nanopyx.methods.drift_alignment.estimator_table", "modulename": "nanopyx.methods.drift_alignment.estimator_table", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"fullname": "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable", "modulename": "nanopyx.methods.drift_alignment.estimator_table", "qualname": "DriftEstimatorTable", "kind": "class", "doc": "<p>Class used to store DriftAlignment parameters as a dictionary.\nParameters can be changes individually by setting the corresponding params key value to desired parameter</p>\n"}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"fullname": "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__", "modulename": "nanopyx.methods.drift_alignment.estimator_table", "qualname": "DriftEstimatorTable.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"fullname": "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params", "modulename": "nanopyx.methods.drift_alignment.estimator_table", "qualname": "DriftEstimatorTable.set_params", "kind": "function", "doc": "<p>Method used to set the parameters of drift alignment using keyword arguments.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>kwargs</strong>:  same as self.params.keys()</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"fullname": "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments", "modulename": "nanopyx.methods.drift_alignment.estimator_table", "qualname": "DriftEstimatorTable.set_comments", "kind": "function", "doc": "<p>Method used to set comments for drift alignment operation</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>comment_string</strong>:  str, comment text to be added</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">comment_string</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"fullname": "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy", "modulename": "nanopyx.methods.drift_alignment.estimator_table", "qualname": "DriftEstimatorTable.export_npy", "kind": "function", "doc": "<p>Method used to export drift table as a npy file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong>:  Path to export drift table as npy</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"fullname": "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy", "modulename": "nanopyx.methods.drift_alignment.estimator_table", "qualname": "DriftEstimatorTable.import_npy", "kind": "function", "doc": "<p>Method used to import drift table as a npy file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong>:  str, Path to drift table saved as a npy file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"fullname": "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv", "modulename": "nanopyx.methods.drift_alignment.estimator_table", "qualname": "DriftEstimatorTable.export_csv", "kind": "function", "doc": "<p>Method used to export drift table as a csv file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong>:  str, Path to export drift table as csv</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"fullname": "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv", "modulename": "nanopyx.methods.drift_alignment.estimator_table", "qualname": "DriftEstimatorTable.import_csv", "kind": "function", "doc": "<p>Method used to import drift table from a csv file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong>:  str, path to import drift table as csv</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "nanopyx.methods.esrrf": {"fullname": "nanopyx.methods.esrrf", "modulename": "nanopyx.methods.esrrf", "kind": "module", "doc": "<p></p>\n"}, "nanopyx.methods.squirrel": {"fullname": "nanopyx.methods.squirrel", "modulename": "nanopyx.methods.squirrel", "kind": "module", "doc": "<p></p>\n"}}, "docInfo": {"nanopyx": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 394}, "nanopyx.core": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "nanopyx.core.analysis": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "nanopyx.core.analysis.ccm": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "nanopyx.core.analysis.ccm.ccm": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 121}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 97}, "nanopyx.core.analysis.ccm.cross_correlation_elastic": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 251}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"qualname": 5, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 99}, "nanopyx.core.analysis.ccm.estimate_shift": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 39}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"qualname": 6, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 63}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 39}, "nanopyx.core.analysis.ccm.helper_functions": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 55}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 53}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 55}, "nanopyx.core.analysis.ccm.rcc": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 9}, "nanopyx.core.analysis.ccm.rcc.rcc": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 3}, "nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "nanopyx.core.analysis.pearson_correlation": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 96}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 60}, "nanopyx.core.image": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.image.blocks": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 79}, "nanopyx.core.io": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.io.checksum": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.io.checksum.get_checksum": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 40}, "nanopyx.core.io.unique_names": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.io.zip_image_loader": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 32}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 23}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 25}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 29}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 6}, "nanopyx.core.kernels": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.sr": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.sr.decorr": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.sr.error_map": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.sr.error_map.ErrorMap": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 3}, "nanopyx.core.sr.error_map.ErrorMap.getRSE": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "nanopyx.core.sr.error_map.ErrorMap.getRSP": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 50}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "nanopyx.core.sr.esrrf": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.sr.esrrf.CalculateRGC": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "nanopyx.core.sr.esrrf.CalculateRGC.calculate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.ThresholdMethod": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.pad": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.calculate_frc_curve": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.get_smoothed_curve": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.get_intersections": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.get_correct_intersection": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.get_square_tapered_image": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.get_window_function": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.get_interpolated_values": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.calculate_fire_number": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "nanopyx.core.sr.frc.do_plot": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 3}, "nanopyx.core.sr.srrf": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.sr.srrf.CalculateRadiality": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "nanopyx.core.sr.srrf.CalculateRadiality.calculate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "nanopyx.core.transform": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "nanopyx.core.transform.binning": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.transform.binning.rebin_2d": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 77}, "nanopyx.core.transform.image_add_random_noise": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 54}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 54}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 123}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 144}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 62}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 62}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 84}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 55}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 82}, "nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "nanopyx.core.transform.image_magnify": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 114}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 58}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 61}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 46}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 46}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 47}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 46}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 47}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 46}, "nanopyx.core.transform.image_shift": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "nanopyx.core.transform.interpolation": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.transform.interpolation.bicubic": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.transform.interpolation.bicubic.Interpolator": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 3}, "nanopyx.core.transform.interpolation.bilinear": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 3}, "nanopyx.core.transform.interpolation.catmull_rom": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 3}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 57}, "nanopyx.core.transform.interpolation.fft_zoom": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 129}, "nanopyx.core.transform.interpolation.lanczos": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 3}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 52}, "nanopyx.core.transform.interpolation.nearest_neighbor": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 22}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 35}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 46}, "nanopyx.core.transform.translation": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.transform.translation.translate_array": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "nanopyx.core.utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.utils.data": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.utils.imagegenerator": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.utils.imagegenerator.beads": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 66}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 80}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 85, "bases": 0, "doc": 122}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 61}, "nanopyx.core.utils.logo": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.utils.logo.print_ascii_logo": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 8}, "nanopyx.core.utils.time": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.utils.time.timeit": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.core.utils.time.timeit.timeit": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "nanopyx.core.utils.time.timeit.timeit2": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "nanopyx.data": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 308}, "nanopyx.data.download": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.data.download.ExampleDataManager": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.data.download.ExampleDataManager.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 83}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 13}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 13}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 35}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 48}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 59}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 41}, "nanopyx.data.download.ExampleDataManager.clear_downloads": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 6}, "nanopyx.data.examples": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 144}, "nanopyx.data.examples.get_path": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 15}, "nanopyx.methods": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 258}, "nanopyx.methods.channel_registration.apply_channel_registration": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 71}, "nanopyx.methods.channel_registration.corrector": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration.estimator": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 212, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 113}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 86}, "nanopyx.methods.drift_alignment.corrector": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 39}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 58}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 48}, "nanopyx.methods.drift_alignment.estimator": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.estimator_table": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 33}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 30}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 32}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 35}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 33}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 32}, "nanopyx.methods.esrrf": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "nanopyx.methods.squirrel": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}}, "length": 194, "save": true}, "index": {"qualname": {"root": {"2": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 1}}, "docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 1}}, "df": 14, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.calculate": {"tf": 1}, "nanopyx.core.sr.frc.calculate_frc_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.calculate": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}}, "df": 13, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.sr.esrrf.CalculateRGC": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.calculate": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.sr.srrf.CalculateRadiality": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.calculate": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}}, "df": 5, "s": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.io.checksum.get_checksum": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}}, "df": 4}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {"nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.frc.calculate_frc_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}}, "df": 4}}}}, "v": {"2": {"docs": {"nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}}, "df": 1}}}, "c": {"docs": {"nanopyx.core.sr.frc.calculate_frc_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}, "nanopyx.core.sr.frc.get_window_function": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}}, "df": 2}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"nanopyx.core.transform.translation.translate_array": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.sr.frc.ThresholdMethod": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "o": {"docs": {"nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"2": {"docs": {"nanopyx.core.utils.time.timeit.timeit2": {"tf": 1}}, "df": 1}, "docs": {"nanopyx.core.utils.time.timeit.timeit": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}}, "df": 2, "s": {"docs": {"nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.io.checksum.get_checksum": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1}, "nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_intersections": {"tf": 1}, "nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}, "nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}, "nanopyx.core.sr.frc.get_window_function": {"tf": 1}, "nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}, "nanopyx.data.examples.get_path": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}}, "df": 22, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.error_map.ErrorMap.getRSE": {"tf": 1}}, "df": 1}, "p": {"docs": {"nanopyx.core.sr.error_map.ErrorMap.getRSP": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}}, "df": 1}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 4}}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}}, "df": 4, "s": {"docs": {"nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}}, "df": 2}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}, "nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 1}}, "df": 14}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"2": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}}, "df": 1, "d": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}}, "df": 9}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx.core.sr.frc.get_intersections": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "x": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.sr.frc.pad": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx.data.examples.get_path": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.sr.frc.do_plot": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.core.sr.error_map.ErrorMap": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSE": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSP": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1}}, "df": 6}}}}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data.download.ExampleDataManager": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}}, "df": 9}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {"nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"2": {"docs": {"nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}}, "df": 1}, "docs": {"nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.transform.translation.translate_array": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}}, "df": 4}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}}, "df": 1}}}}}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}}, "df": 9}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"nanopyx.core.sr.frc.do_plot": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}}, "df": 4}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1}}, "df": 9, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}}, "df": 1}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nanopyx.core.sr.frc.get_window_function": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {"nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}}, "df": 2}}}}}}, "fullname": {"root": {"2": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 1}}, "docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 1}}, "df": 14, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "x": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core": {"tf": 1}, "nanopyx.core.analysis": {"tf": 1}, "nanopyx.core.analysis.ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}, "nanopyx.core.image": {"tf": 1}, "nanopyx.core.image.blocks": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.io": {"tf": 1}, "nanopyx.core.io.checksum": {"tf": 1}, "nanopyx.core.io.checksum.get_checksum": {"tf": 1}, "nanopyx.core.io.unique_names": {"tf": 1}, "nanopyx.core.io.zip_image_loader": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}, "nanopyx.core.kernels": {"tf": 1}, "nanopyx.core.sr": {"tf": 1}, "nanopyx.core.sr.decorr": {"tf": 1}, "nanopyx.core.sr.error_map": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSE": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSP": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}, "nanopyx.core.sr.esrrf": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.calculate": {"tf": 1}, "nanopyx.core.sr.frc": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"tf": 1}, "nanopyx.core.sr.frc.pad": {"tf": 1}, "nanopyx.core.sr.frc.calculate_frc_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_intersections": {"tf": 1}, "nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}, "nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}, "nanopyx.core.sr.frc.get_window_function": {"tf": 1}, "nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1}, "nanopyx.core.sr.frc.do_plot": {"tf": 1}, "nanopyx.core.sr.srrf": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.calculate": {"tf": 1}, "nanopyx.core.transform": {"tf": 1}, "nanopyx.core.transform.binning": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 1}, "nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}, "nanopyx.core.transform.interpolation": {"tf": 1}, "nanopyx.core.transform.interpolation.bicubic": {"tf": 1}, "nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.core.transform.translation": {"tf": 1}, "nanopyx.core.transform.translation.translate_array": {"tf": 1}, "nanopyx.core.utils": {"tf": 1}, "nanopyx.core.utils.data": {"tf": 1}, "nanopyx.core.utils.imagegenerator": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.core.utils.logo": {"tf": 1}, "nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1}, "nanopyx.core.utils.time": {"tf": 1}, "nanopyx.core.utils.time.timeit": {"tf": 1}, "nanopyx.core.utils.time.timeit.timeit": {"tf": 1}, "nanopyx.core.utils.time.timeit.timeit2": {"tf": 1}, "nanopyx.data": {"tf": 1}, "nanopyx.data.download": {"tf": 1}, "nanopyx.data.download.ExampleDataManager": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}, "nanopyx.data.examples": {"tf": 1}, "nanopyx.data.examples.get_path": {"tf": 1}, "nanopyx.methods": {"tf": 1}, "nanopyx.methods.channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.corrector": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}, "nanopyx.methods.channel_registration.estimator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}, "nanopyx.methods.esrrf": {"tf": 1}, "nanopyx.methods.squirrel": {"tf": 1}}, "df": 194}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.io.unique_names": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_add_random_noise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 1}}, "df": 11}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}}, "df": 6}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core": {"tf": 1}, "nanopyx.core.analysis": {"tf": 1}, "nanopyx.core.analysis.ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}, "nanopyx.core.image": {"tf": 1}, "nanopyx.core.image.blocks": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.io": {"tf": 1}, "nanopyx.core.io.checksum": {"tf": 1}, "nanopyx.core.io.checksum.get_checksum": {"tf": 1}, "nanopyx.core.io.unique_names": {"tf": 1}, "nanopyx.core.io.zip_image_loader": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}, "nanopyx.core.kernels": {"tf": 1}, "nanopyx.core.sr": {"tf": 1}, "nanopyx.core.sr.decorr": {"tf": 1}, "nanopyx.core.sr.error_map": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSE": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSP": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}, "nanopyx.core.sr.esrrf": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.calculate": {"tf": 1}, "nanopyx.core.sr.frc": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"tf": 1}, "nanopyx.core.sr.frc.pad": {"tf": 1}, "nanopyx.core.sr.frc.calculate_frc_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_intersections": {"tf": 1}, "nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}, "nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}, "nanopyx.core.sr.frc.get_window_function": {"tf": 1}, "nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1}, "nanopyx.core.sr.frc.do_plot": {"tf": 1}, "nanopyx.core.sr.srrf": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.calculate": {"tf": 1}, "nanopyx.core.transform": {"tf": 1}, "nanopyx.core.transform.binning": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 1}, "nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}, "nanopyx.core.transform.interpolation": {"tf": 1}, "nanopyx.core.transform.interpolation.bicubic": {"tf": 1}, "nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.core.transform.translation": {"tf": 1}, "nanopyx.core.transform.translation.translate_array": {"tf": 1}, "nanopyx.core.utils": {"tf": 1}, "nanopyx.core.utils.data": {"tf": 1}, "nanopyx.core.utils.imagegenerator": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.core.utils.logo": {"tf": 1}, "nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1}, "nanopyx.core.utils.time": {"tf": 1}, "nanopyx.core.utils.time.timeit": {"tf": 1}, "nanopyx.core.utils.time.timeit.timeit": {"tf": 1}, "nanopyx.core.utils.time.timeit.timeit2": {"tf": 1}}, "df": 134}, "r": {"docs": {"nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.channel_registration.corrector": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}}, "df": 10}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.analysis.ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.estimate_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}}, "df": 23, "s": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.calculate": {"tf": 1}, "nanopyx.core.sr.frc.calculate_frc_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.calculate": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}}, "df": 13, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.sr.esrrf.CalculateRGC": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.calculate": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.sr.srrf.CalculateRadiality": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.calculate": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.io.checksum": {"tf": 1}, "nanopyx.core.io.checksum.get_checksum": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.methods.channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.corrector": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}, "nanopyx.methods.channel_registration.estimator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 17, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}}, "df": 4}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {"nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.frc.calculate_frc_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}}, "df": 4}}}}, "v": {"2": {"docs": {"nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "s": {"docs": {}, "df": 0, "v": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis": {"tf": 1}, "nanopyx.core.analysis.ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}}, "df": 25}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 27}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.image_add_random_noise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 1}}, "df": 11, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"2": {"docs": {"nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}}, "df": 1}, "docs": {"nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.transform.translation.translate_array": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}}, "df": 4}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}}, "df": 1}}}, "c": {"docs": {"nanopyx.core.sr.frc": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"tf": 1}, "nanopyx.core.sr.frc.pad": {"tf": 1}, "nanopyx.core.sr.frc.calculate_frc_curve": {"tf": 1.4142135623730951}, "nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_intersections": {"tf": 1}, "nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}, "nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}, "nanopyx.core.sr.frc.get_window_function": {"tf": 1}, "nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1.4142135623730951}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1}, "nanopyx.core.sr.frc.do_plot": {"tf": 1}}, "df": 15}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}, "nanopyx.core.sr.frc.get_window_function": {"tf": 1}}, "df": 2, "s": {"docs": {"nanopyx.core.analysis.ccm.helper_functions": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}}, "df": 4}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.methods.channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.corrector": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}, "nanopyx.methods.channel_registration.estimator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 16}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.analysis.ccm.rcc": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.transform.image_add_random_noise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}}, "df": 12}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"tf": 1}}, "df": 9}, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.channel_registration.estimator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 28}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {"nanopyx.core.sr.esrrf": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.calculate": {"tf": 1}, "nanopyx.methods.esrrf": {"tf": 1}}, "df": 5}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.sr.error_map": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSE": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSP": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}}, "df": 9, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.core.sr.error_map.ErrorMap": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSE": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSP": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1}}, "df": 6}}}}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data.download.ExampleDataManager": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}}, "df": 9}}}}}}}}}}}, "s": {"docs": {"nanopyx.data.examples": {"tf": 1}, "nanopyx.data.examples.get_path": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.transform.translation": {"tf": 1}, "nanopyx.core.transform.translation.translate_array": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}}, "df": 6}}}, "e": {"docs": {"nanopyx.core.transform.translation.translate_array": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.transform": {"tf": 1}, "nanopyx.core.transform.binning": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 1}, "nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}, "nanopyx.core.transform.interpolation": {"tf": 1}, "nanopyx.core.transform.interpolation.bicubic": {"tf": 1}, "nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.core.transform.translation": {"tf": 1}, "nanopyx.core.transform.translation.translate_array": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}}, "df": 46}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.sr.frc.ThresholdMethod": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "o": {"docs": {"nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 12}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.utils.time": {"tf": 1}, "nanopyx.core.utils.time.timeit": {"tf": 1}, "nanopyx.core.utils.time.timeit.timeit": {"tf": 1}, "nanopyx.core.utils.time.timeit.timeit2": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"2": {"docs": {"nanopyx.core.utils.time.timeit.timeit2": {"tf": 1}}, "df": 1}, "docs": {"nanopyx.core.utils.time.timeit": {"tf": 1}, "nanopyx.core.utils.time.timeit.timeit": {"tf": 1.4142135623730951}, "nanopyx.core.utils.time.timeit.timeit2": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}}, "df": 2, "s": {"docs": {"nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}}, "df": 1}}, "p": {"docs": {"nanopyx.core.sr.error_map": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSE": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSP": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}}, "df": 9}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}}, "df": 12}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.methods": {"tf": 1}, "nanopyx.methods.channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.corrector": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}, "nanopyx.methods.channel_registration.estimator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}, "nanopyx.methods.esrrf": {"tf": 1}, "nanopyx.methods.squirrel": {"tf": 1}}, "df": 46}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.io.checksum.get_checksum": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1}, "nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_intersections": {"tf": 1}, "nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}, "nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}, "nanopyx.core.sr.frc.get_window_function": {"tf": 1}, "nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}, "nanopyx.data.examples.get_path": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}}, "df": 22, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.error_map.ErrorMap.getRSE": {"tf": 1}}, "df": 1}, "p": {"docs": {"nanopyx.core.sr.error_map.ErrorMap.getRSP": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}}, "df": 1}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 4}}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}}, "df": 10, "s": {"docs": {"nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}}, "df": 2}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}, "nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.methods.squirrel": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {"nanopyx.core.sr": {"tf": 1}, "nanopyx.core.sr.decorr": {"tf": 1}, "nanopyx.core.sr.error_map": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSE": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSP": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}, "nanopyx.core.sr.esrrf": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.calculate": {"tf": 1}, "nanopyx.core.sr.frc": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"tf": 1}, "nanopyx.core.sr.frc.pad": {"tf": 1}, "nanopyx.core.sr.frc.calculate_frc_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_intersections": {"tf": 1}, "nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}, "nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}, "nanopyx.core.sr.frc.get_window_function": {"tf": 1}, "nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1}, "nanopyx.core.sr.frc.do_plot": {"tf": 1}, "nanopyx.core.sr.srrf": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.calculate": {"tf": 1}}, "df": 34, "r": {"docs": {}, "df": 0, "f": {"docs": {"nanopyx.core.sr.srrf": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.calculate": {"tf": 1}}, "df": 4}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 1}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 1}}, "df": 14}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"2": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}}, "df": 1, "d": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.interpolation": {"tf": 1}, "nanopyx.core.transform.interpolation.bicubic": {"tf": 1}, "nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}}, "df": 18}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}}, "df": 9}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx.core.sr.frc.get_intersections": {"tf": 1}}, "df": 1}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.image": {"tf": 1}, "nanopyx.core.image.blocks": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.io.zip_image_loader": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}, "nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 1}, "nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}}, "df": 35, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.utils.imagegenerator": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {"nanopyx.core.io": {"tf": 1}, "nanopyx.core.io.checksum": {"tf": 1}, "nanopyx.core.io.checksum.get_checksum": {"tf": 1}, "nanopyx.core.io.unique_names": {"tf": 1}, "nanopyx.core.io.zip_image_loader": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}}, "df": 11}}, "p": {"docs": {}, "df": 0, "x": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.pearson_correlation": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.sr.frc.pad": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx.data.examples.get_path": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.sr.frc.do_plot": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.helper_functions": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}}, "df": 4}}}}}}, "x": {"docs": {"nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.image.blocks": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.transform.binning": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.bicubic": {"tf": 1}, "nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.io.unique_names": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.utils": {"tf": 1}, "nanopyx.core.utils.data": {"tf": 1}, "nanopyx.core.utils.imagegenerator": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.core.utils.logo": {"tf": 1}, "nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1}, "nanopyx.core.utils.time": {"tf": 1}, "nanopyx.core.utils.time.timeit": {"tf": 1}, "nanopyx.core.utils.time.timeit.timeit": {"tf": 1}, "nanopyx.core.utils.time.timeit.timeit2": {"tf": 1}}, "df": 14}}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.core.io.zip_image_loader": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 11}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.io.zip_image_loader": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}}, "df": 7}}}}, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {"nanopyx.core.utils.logo": {"tf": 1}, "nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.sr.decorr": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"nanopyx.core.sr.frc.do_plot": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.data.download": {"tf": 1}, "nanopyx.data.download.ExampleDataManager": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}}, "df": 10, "s": {"docs": {"nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.core.utils.data": {"tf": 1}, "nanopyx.data": {"tf": 1}, "nanopyx.data.download": {"tf": 1}, "nanopyx.data.download.ExampleDataManager": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}, "nanopyx.data.examples": {"tf": 1}, "nanopyx.data.examples.get_path": {"tf": 1}}, "df": 14, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.methods.drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 28, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}}, "df": 4}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1}}, "df": 9, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.kernels": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}}, "df": 1}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"nanopyx.core.sr.frc.get_window_function": {"tf": 1}}, "df": 1}}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"0": {"docs": {"nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}}, "df": 1}, "1": {"0": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "2": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}}, "df": 2}, "3": {"0": {"0": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "9": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1.4142135623730951}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1.4142135623730951}}, "df": 6}, "docs": {}, "df": 0}, "docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 3.1622776601683795}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 3.1622776601683795}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 6.48074069840786}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 4.47213595499958}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 2.8284271247461903}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 3.7416573867739413}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 3.1622776601683795}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 3.1622776601683795}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 3.1622776601683795}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 3.1622776601683795}, "nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 5.477225575051661}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 7.483314773547883}, "nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 6.928203230275509}, "nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 4.69041575982343}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 3.1622776601683795}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 3.1622776601683795}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 4.242640687119285}, "nanopyx.core.io.checksum.get_checksum": {"tf": 4}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 3.4641016151377544}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 3.4641016151377544}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 3.4641016151377544}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 4.242640687119285}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 3.1622776601683795}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"tf": 2}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 6.6332495807108}, "nanopyx.core.sr.error_map.ErrorMap.getRSE": {"tf": 3.4641016151377544}, "nanopyx.core.sr.error_map.ErrorMap.getRSP": {"tf": 3.4641016151377544}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 3.4641016151377544}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 7.280109889280518}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 6.324555320336759}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 4}, "nanopyx.core.sr.esrrf.CalculateRGC.calculate": {"tf": 3.1622776601683795}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"tf": 2}, "nanopyx.core.sr.frc.pad": {"tf": 4.242640687119285}, "nanopyx.core.sr.frc.calculate_frc_curve": {"tf": 3.7416573867739413}, "nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 3.1622776601683795}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 4.69041575982343}, "nanopyx.core.sr.frc.get_intersections": {"tf": 5.477225575051661}, "nanopyx.core.sr.frc.get_correct_intersection": {"tf": 4.69041575982343}, "nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 3.1622776601683795}, "nanopyx.core.sr.frc.get_window_function": {"tf": 4.69041575982343}, "nanopyx.core.sr.frc.get_interpolated_values": {"tf": 4.69041575982343}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 4.69041575982343}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 4.242640687119285}, "nanopyx.core.sr.frc.do_plot": {"tf": 5.0990195135927845}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 4}, "nanopyx.core.sr.srrf.CalculateRadiality.calculate": {"tf": 3.1622776601683795}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 4.898979485566356}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 4.242640687119285}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 4.242640687119285}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 4.242640687119285}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 4.242640687119285}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 4.242640687119285}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 4.242640687119285}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 4.242640687119285}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 4.242640687119285}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 4.242640687119285}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 3.1622776601683795}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 7}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 2}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 2}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 3.1622776601683795}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 3.1622776601683795}, "nanopyx.core.transform.translation.translate_array": {"tf": 3.1622776601683795}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 3.7416573867739413}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 6.4031242374328485}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 7.937253933193772}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 2.6457513110645907}, "nanopyx.core.utils.logo.print_ascii_logo": {"tf": 2.6457513110645907}, "nanopyx.core.utils.time.timeit.timeit": {"tf": 3.7416573867739413}, "nanopyx.core.utils.time.timeit.timeit2": {"tf": 3.1622776601683795}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 4.242640687119285}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 4.123105625617661}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 4.123105625617661}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 4.47213595499958}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 4.47213595499958}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 7.280109889280518}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 4.47213595499958}, "nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 3.1622776601683795}, "nanopyx.data.examples.get_path": {"tf": 3}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 4.242640687119285}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 4.242640687119285}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"tf": 2}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 4.242640687119285}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 4.69041575982343}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"tf": 2}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 3.7416573867739413}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 6.855654600401044}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 4.242640687119285}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 4.242640687119285}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 12.727922061357855}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 4.242640687119285}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 4.242640687119285}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"tf": 2}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 4.242640687119285}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 4.242640687119285}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"tf": 2}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"tf": 4.242640687119285}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 3.7416573867739413}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 3.7416573867739413}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 3.1622776601683795}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 3.1622776601683795}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 5.0990195135927845}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 4}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 2}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 4}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 4.242640687119285}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 4.898979485566356}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 4.898979485566356}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 4.898979485566356}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 4.898979485566356}}, "df": 121, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}, "nanopyx.core.sr.esrrf.CalculateRGC.calculate": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.calculate": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.core.transform.translation.translate_array": {"tf": 1}}, "df": 23}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"1": {"docs": {"nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.sr.frc.calculate_frc_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1}}, "df": 4}, "2": {"docs": {"nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.sr.frc.calculate_frc_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1}}, "df": 4}, "docs": {"nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1}, "nanopyx.core.sr.frc.pad": {"tf": 1}}, "df": 2, "g": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 5}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}}, "df": 4, "s": {"docs": {"nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 1, "t": {"docs": {"nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}}, "df": 4}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 5, "s": {"docs": {"nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1.7320508075688772}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 3}}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1}}, "df": 2}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.frc.get_window_function": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 4}}}}}}, "m": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSE": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSP": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 37}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 4}}}, "r": {"docs": {"nanopyx.core.io.checksum.get_checksum": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1.4142135623730951}, "nanopyx.data.examples.get_path": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 15, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 2}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx.core.sr.frc.do_plot": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 5, "x": {"docs": {"nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 8}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "x": {"docs": {"nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1.7320508075688772}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx.core.io.checksum.get_checksum": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 14}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"tf": 1}}, "df": 17}}, "r": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_intersections": {"tf": 1.4142135623730951}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.sr.frc.do_plot": {"tf": 1}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {"nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 4, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1.7320508075688772}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1.4142135623730951}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1.4142135623730951}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1.4142135623730951}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_intersections": {"tf": 1.4142135623730951}, "nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}, "nanopyx.core.sr.frc.get_window_function": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 14}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1.7320508075688772}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1.4142135623730951}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1.4142135623730951}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1.4142135623730951}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_intersections": {"tf": 1.4142135623730951}, "nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1}, "nanopyx.core.sr.frc.get_window_function": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 13}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 18}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.frc.do_plot": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}}, "df": 5}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "x": {"docs": {"nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {"nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 1}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1}, "nanopyx.core.sr.frc.get_intersections": {"tf": 1}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1}, "nanopyx.core.sr.frc.do_plot": {"tf": 1.4142135623730951}}, "df": 5}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.io.checksum.get_checksum": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}}, "df": 2}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.sr.frc.do_plot": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"1": {"6": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"nanopyx.core.sr.error_map.ErrorMap.getRSE": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.getRSP": {"tf": 1}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1.7320508075688772}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1.4142135623730951}}, "df": 7}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1.4142135623730951}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.utils.time.timeit.timeit": {"tf": 1}, "nanopyx.core.utils.time.timeit.timeit2": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.utils.time.timeit.timeit": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}}, "df": 4}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.sr.frc.get_intersections": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.sr.frc.get_window_function": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {"nanopyx.core.sr.frc.do_plot": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "o": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1}}, "df": 2}}, "x": {"2": {"7": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1}, "nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}}, "df": 2}, "y": {"docs": {"nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1}, "nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1}}, "df": 2}, "z": {"docs": {"nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.sr.frc.pad": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.sr.frc.pad": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}}, "df": 3}}}, "t": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 3}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 1}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}}, "df": 19}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1}}, "df": 3}}}}, "bases": {"root": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "x": {"docs": {"nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}}, "df": 4}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}}, "df": 4}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "doc": {"root": {"0": {"2": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 1}, "docs": {"nanopyx": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 4}, "1": {"0": {"1": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}}, "df": 1}, "4": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 1}, "5": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}}, "df": 1}, "8": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "1": {"0": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}, "2": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 1}, "4": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.7320508075688772}}, "df": 2}, "5": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "2": {"1": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1.4142135623730951}}, "df": 11}, "2": {"5": {"6": {"docs": {"nanopyx.core.io.checksum.get_checksum": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 2, "d": {"docs": {"nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1.4142135623730951}}, "df": 13}}, "3": {"0": {"0": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "9": {"docs": {"nanopyx.data": {"tf": 1.4142135623730951}, "nanopyx.data.examples": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1.7320508075688772}, "nanopyx.data.examples": {"tf": 1}}, "df": 2, "x": {"3": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "4": {"5": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.4142135623730951}}, "df": 2}, "6": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}, "6": {"4": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"8": {"8": {"8": {"docs": {"nanopyx": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"7": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.7320508075688772}}, "df": 2}, "9": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}}, "df": 1}, "docs": {"nanopyx": {"tf": 12.041594578792296}, "nanopyx.core": {"tf": 1.4142135623730951}, "nanopyx.core.analysis": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.ccm": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 5.0990195135927845}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 5.196152422706632}, "nanopyx.core.analysis.ccm.cross_correlation_elastic": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 6.855654600401044}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 5.291502622129181}, "nanopyx.core.analysis.ccm.estimate_shift": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 3.7416573867739413}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 4.898979485566356}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 3.3166247903554}, "nanopyx.core.analysis.ccm.helper_functions": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 4.69041575982343}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 4.58257569495584}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 4.69041575982343}, "nanopyx.core.analysis.ccm.rcc": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.rcc.calculate_x_corr": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.rcc.rcc": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.rcc.minimize_shifts": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.pearson_correlation": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 6}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 5.196152422706632}, "nanopyx.core.image": {"tf": 1.7320508075688772}, "nanopyx.core.image.blocks": {"tf": 1.7320508075688772}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 5.477225575051661}, "nanopyx.core.io": {"tf": 1.7320508075688772}, "nanopyx.core.io.checksum": {"tf": 1.7320508075688772}, "nanopyx.core.io.checksum.get_checksum": {"tf": 4.47213595499958}, "nanopyx.core.io.unique_names": {"tf": 1.7320508075688772}, "nanopyx.core.io.zip_image_loader": {"tf": 1.7320508075688772}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator": {"tf": 1.7320508075688772}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 3.4641016151377544}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 3.1622776601683795}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 3.1622776601683795}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 3.4641016151377544}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1.4142135623730951}, "nanopyx.core.kernels": {"tf": 1.7320508075688772}, "nanopyx.core.sr": {"tf": 1.7320508075688772}, "nanopyx.core.sr.decorr": {"tf": 1.7320508075688772}, "nanopyx.core.sr.error_map": {"tf": 1.7320508075688772}, "nanopyx.core.sr.error_map.ErrorMap": {"tf": 1.7320508075688772}, "nanopyx.core.sr.error_map.ErrorMap.__init__": {"tf": 1.7320508075688772}, "nanopyx.core.sr.error_map.ErrorMap.optimise": {"tf": 1.7320508075688772}, "nanopyx.core.sr.error_map.ErrorMap.getRSE": {"tf": 1.7320508075688772}, "nanopyx.core.sr.error_map.ErrorMap.getRSP": {"tf": 1.7320508075688772}, "nanopyx.core.sr.error_map.ErrorMap.get_sigma": {"tf": 1.7320508075688772}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 3}, "nanopyx.core.sr.error_map.sigma_function_to_optimize": {"tf": 1.7320508075688772}, "nanopyx.core.sr.esrrf": {"tf": 1.7320508075688772}, "nanopyx.core.sr.esrrf.CalculateRGC": {"tf": 1.7320508075688772}, "nanopyx.core.sr.esrrf.CalculateRGC.__init__": {"tf": 1.7320508075688772}, "nanopyx.core.sr.esrrf.CalculateRGC.calculate": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.ThresholdMethod": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.ThresholdMethod.__init__": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.pad": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.calculate_frc_curve": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.get_smoothed_curve": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.calculate_threshold_curve": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.get_intersections": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.get_correct_intersection": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.get_square_tapered_image": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.get_window_function": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.get_interpolated_values": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.calculate_fire_number_from_FRC_curve": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.calculate_fire_number": {"tf": 1.7320508075688772}, "nanopyx.core.sr.frc.do_plot": {"tf": 1.7320508075688772}, "nanopyx.core.sr.srrf": {"tf": 1.7320508075688772}, "nanopyx.core.sr.srrf.CalculateRadiality": {"tf": 1.7320508075688772}, "nanopyx.core.sr.srrf.CalculateRadiality.__init__": {"tf": 1.7320508075688772}, "nanopyx.core.sr.srrf.CalculateRadiality.calculate": {"tf": 1.7320508075688772}, "nanopyx.core.transform": {"tf": 1.7320508075688772}, "nanopyx.core.transform.binning": {"tf": 1.7320508075688772}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 5.196152422706632}, "nanopyx.core.transform.image_add_random_noise": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 4.47213595499958}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 4.47213595499958}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 6.928203230275509}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 7.745966692414834}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 5.477225575051661}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 4.898979485566356}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 6}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 4.47213595499958}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 5.656854249492381}, "nanopyx.core.transform.image_add_random_noise.test_logFactorial": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_magnify": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 5.916079783099616}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 3.7416573867739413}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 3.3166247903554}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_shift": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.bicubic": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.bicubic.Interpolator": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.bilinear": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.bilinear.Interpolator": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.catmull_rom": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.catmull_rom.Interpolator": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 5.385164807134504}, "nanopyx.core.transform.interpolation.fft_zoom": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 6}, "nanopyx.core.transform.interpolation.lanczos": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.lanczos.Interpolator": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 4}, "nanopyx.core.transform.interpolation.nearest_neighbor": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 3.4641016151377544}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 4.47213595499958}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 4.898979485566356}, "nanopyx.core.transform.translation": {"tf": 1.7320508075688772}, "nanopyx.core.transform.translation.translate_array": {"tf": 1.7320508075688772}, "nanopyx.core.utils": {"tf": 1.7320508075688772}, "nanopyx.core.utils.data": {"tf": 1.7320508075688772}, "nanopyx.core.utils.imagegenerator": {"tf": 1.7320508075688772}, "nanopyx.core.utils.imagegenerator.beads": {"tf": 1.7320508075688772}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 5}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 5.385164807134504}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 6.324555320336759}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 3.4641016151377544}, "nanopyx.core.utils.logo": {"tf": 1.7320508075688772}, "nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1.4142135623730951}, "nanopyx.core.utils.time": {"tf": 1.7320508075688772}, "nanopyx.core.utils.time.timeit": {"tf": 1.7320508075688772}, "nanopyx.core.utils.time.timeit.timeit": {"tf": 1.7320508075688772}, "nanopyx.core.utils.time.timeit.timeit2": {"tf": 1.7320508075688772}, "nanopyx.data": {"tf": 14.247806848775006}, "nanopyx.data.download": {"tf": 1.7320508075688772}, "nanopyx.data.download.ExampleDataManager": {"tf": 1.7320508075688772}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 5.0990195135927845}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 2.8284271247461903}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 2.8284271247461903}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 4.242640687119285}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 4.47213595499958}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 4.898979485566356}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 4.47213595499958}, "nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1.4142135623730951}, "nanopyx.data.examples": {"tf": 9.327379053088816}, "nanopyx.data.examples.get_path": {"tf": 2.8284271247461903}, "nanopyx.methods": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 7.937253933193772}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 5.0990195135927845}, "nanopyx.methods.channel_registration.corrector": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.__init__": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.load_translation_masks": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.corrector.ChannelRegistrationCorrector.align_channels": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimator": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.__init__": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.apply_elastic_transform": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.calculate_translation": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_translation_mask": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.save_ccms": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimator.ChannelRegistrationEstimator.estimate": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 6.557438524302}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 5.5677643628300215}, "nanopyx.methods.drift_alignment.corrector": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 3.605551275463989}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.__init__": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 4.795831523312719}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 4.58257569495584}, "nanopyx.methods.drift_alignment.estimator": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.__init__": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.estimate": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.compute_temporal_averaging": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shift_from_ccm_slice": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.get_shifts_from_ccm": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.create_drift_table": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.save_drift_table": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimator.DriftEstimator.set_estimator_params": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimator_table": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.__init__": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 3.7416573867739413}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 3.4641016151377544}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 3.605551275463989}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 3.605551275463989}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 3.605551275463989}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 3.4641016151377544}, "nanopyx.methods.esrrf": {"tf": 1.7320508075688772}, "nanopyx.methods.squirrel": {"tf": 1.7320508075688772}}, "df": 194, "n": {"docs": {"nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 2.23606797749979}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 2}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.data": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1.4142135623730951}}, "df": 8, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "x": {"1": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}, "docs": {"nanopyx": {"tf": 3.1622776601683795}, "nanopyx.core": {"tf": 1}, "nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1}, "nanopyx.data": {"tf": 1}, "nanopyx.data.examples": {"tf": 1}}, "df": 5, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.data.examples": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {"nanopyx": {"tf": 1.7320508075688772}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 2}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 2}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1.7320508075688772}}, "df": 5}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1.4142135623730951}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}}, "df": 22}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1.7320508075688772}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 12}}}}}, "p": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1.4142135623730951}}, "df": 9, "y": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1.4142135623730951}}, "df": 4}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 10}}}}}}, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}}, "df": 4, "s": {"docs": {"nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {"nanopyx": {"tf": 1}}, "df": 1, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.data": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx": {"tf": 2}}, "df": 1}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 11, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data.examples": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"7": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 6}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.io.checksum.get_checksum": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 53}}}}}, "s": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx.core.io.checksum.get_checksum": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1.4142135623730951}, "nanopyx.data": {"tf": 1.7320508075688772}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 2}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1.4142135623730951}, "nanopyx.data.examples": {"tf": 2}, "nanopyx.data.examples.get_path": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 2}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1.4142135623730951}}, "df": 17}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.data.examples": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx": {"tf": 2.23606797749979}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx": {"tf": 1.4142135623730951}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1.4142135623730951}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}}, "df": 4, "s": {"docs": {"nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.data": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {"nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}}, "df": 6, "h": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 3.872983346207417}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 3}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 3.605551275463989}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 2.23606797749979}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}, "nanopyx.core.io.checksum.get_checksum": {"tf": 1.7320508075688772}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1.7320508075688772}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1.7320508075688772}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 2.23606797749979}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 2.23606797749979}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 4.47213595499958}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 4.898979485566356}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 2.6457513110645907}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 2.6457513110645907}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 2.6457513110645907}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 3.1622776601683795}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 2}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 2}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 2.449489742783178}, "nanopyx.core.transform.translation.translate_array": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 2}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1.7320508075688772}, "nanopyx.data.examples": {"tf": 1.7320508075688772}, "nanopyx.data.examples.get_path": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 2.23606797749979}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}}, "df": 59, "n": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}}, "df": 1}, "m": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.data.examples": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1.4142135623730951}, "nanopyx.data": {"tf": 1.7320508075688772}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"nanopyx": {"tf": 2.449489742783178}, "nanopyx.core": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 2}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 3}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 2.449489742783178}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.io.checksum.get_checksum": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 2}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 2}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.7320508075688772}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1.7320508075688772}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 2.449489742783178}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1.4142135623730951}, "nanopyx.data.examples": {"tf": 1}, "nanopyx.data.examples.get_path": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 3.605551275463989}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1.4142135623730951}}, "df": 62, "x": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.data.examples": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.examples": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 7}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2.6457513110645907}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 2}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.4142135623730951}}, "df": 3}}}, "e": {"docs": {"nanopyx.core.transform.translation.translate_array": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}}, "df": 2, "s": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2, "s": {"docs": {"nanopyx.core.transform": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 2}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1.4142135623730951}}, "df": 2}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 2}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 2}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1.4142135623730951}}, "df": 9}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 2, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}}, "df": 1, "f": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 5, "[": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}}, "df": 3}}}}, "s": {"docs": {"nanopyx.core.analysis": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}}, "df": 5, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx": {"tf": 1.7320508075688772}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 2}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}}, "df": 6}}}}}}, "m": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1.4142135623730951}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data": {"tf": 1}, "nanopyx.data.examples": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "x": {"docs": {"nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1.4142135623730951}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1.4142135623730951}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {"nanopyx": {"tf": 1}}, "df": 1, "a": {"docs": {"nanopyx.core.io.checksum.get_checksum": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1.4142135623730951}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.7320508075688772}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.7320508075688772}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1.4142135623730951}}, "df": 21}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 2}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 2.23606797749979}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 2}}, "df": 6, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.transform": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.4142135623730951}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}}, "df": 6, "s": {"docs": {"nanopyx.core.analysis.ccm": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 2.8284271247461903}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 2}}, "df": 3, "s": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}}, "df": 1}, "d": {"docs": {"nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {"nanopyx.data": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"2": {"0": {"1": {"3": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}}, "df": 5, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}}, "df": 3, "s": {"docs": {"nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 2.23606797749979}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 2.23606797749979}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {"nanopyx.data": {"tf": 1}, "nanopyx.data.examples": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "f": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}}, "df": 3}}, "e": {"docs": {"nanopyx.data.examples": {"tf": 1}}, "df": 1}, "t": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {"nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}, "s": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"nanopyx": {"tf": 1.7320508075688772}, "nanopyx.core.analysis": {"tf": 1}, "nanopyx.core.analysis.ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2.449489742783178}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.transform": {"tf": 1}, "nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}, "nanopyx.data": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.examples": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 16, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.io.checksum.get_checksum": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data.examples": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.io.checksum.get_checksum": {"tf": 1.7320508075688772}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1.7320508075688772}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 9, "s": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.data": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 10}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}}, "df": 3, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}}, "df": 13, "s": {"docs": {"nanopyx.core.analysis": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 15, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1.4142135623730951}}, "df": 12}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"nanopyx": {"tf": 2}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1.4142135623730951}, "nanopyx.core.io.checksum.get_checksum": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 3}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 3.3166247903554}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 2.23606797749979}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 2.23606797749979}, "nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_shift": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.translation.translate_array": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 2}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.7320508075688772}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 2}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}}, "df": 53, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "r": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 2}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "v": {"docs": {"nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 2}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"nanopyx.core.utils.logo.print_ascii_logo": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"nanopyx.data": {"tf": 1.4142135623730951}, "nanopyx.data.examples": {"tf": 1.4142135623730951}}, "df": 2}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 5}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 10}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 14, "s": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core": {"tf": 1}, "nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}, "nanopyx.data": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.data.examples": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}}, "df": 3}}}, "x": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}}, "df": 5}}}}, "x": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1.7320508075688772}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}}, "df": 4, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}}, "df": 12}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2.449489742783178}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 2, "s": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.4142135623730951}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1.7320508075688772}}, "df": 11}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis": {"tf": 1}, "nanopyx.core.analysis.ccm": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "a": {"6": {"4": {"7": {"docs": {"nanopyx.data": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}, "a": {"docs": {"nanopyx": {"tf": 2.8284271247461903}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1.7320508075688772}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 2.23606797749979}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 37, "n": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 2}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.core.transform.translation.translate_array": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}}, "df": 29, "d": {"docs": {"nanopyx": {"tf": 2.23606797749979}, "nanopyx.core": {"tf": 1}, "nanopyx.core.analysis": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1.7320508075688772}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.data": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}}, "df": 19}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx": {"tf": 1.7320508075688772}, "nanopyx.core.analysis": {"tf": 1}}, "df": 2}}, "e": {"docs": {"nanopyx.core": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1.4142135623730951}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 5}, "r": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1.4142135623730951}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1.4142135623730951}, "nanopyx.core.transform.translation.translate_array": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1.7320508075688772}}, "df": 24}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}}, "df": 9}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}}, "df": 4}, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 2}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 12, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}}, "df": 2}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 3}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}}, "df": 6, "s": {"docs": {"nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx": {"tf": 1.7320508075688772}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}}, "df": 3, "s": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.io.checksum.get_checksum": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1.4142135623730951}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1.7320508075688772}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1.4142135623730951}, "nanopyx.data.examples.get_path": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}}, "df": 51}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1.4142135623730951}}, "df": 2, "x": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}}, "df": 2}, "y": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx": {"tf": 1.7320508075688772}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 6}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 2}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 2}}, "df": 2}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}}, "df": 2}, "w": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 2}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 1, "m": {"1": {"docs": {"nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}}, "df": 3}, "2": {"docs": {"nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}}, "df": 2}, "docs": {"nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}}, "df": 1, "a": {"2": {"docs": {"nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"nanopyx.core.analysis": {"tf": 1}, "nanopyx.core.analysis.ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1.7320508075688772}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_shape": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1.4142135623730951}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_thumb": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 2}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 2}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 2}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 2}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 2}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 2}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 2}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 2}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 2}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 2}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 2.23606797749979}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 2}, "nanopyx.core.transform.image_shift": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 2}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1.7320508075688772}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 2.23606797749979}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 2}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 2}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1.7320508075688772}}, "df": 47, "s": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 2}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}, "nanopyx.core.transform": {"tf": 1}, "nanopyx.core.transform.translation.translate_array": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}}, "df": 9}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data": {"tf": 1.4142135623730951}, "nanopyx.data.examples": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1.4142135623730951}}, "df": 4}}}}, "g": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}}, "df": 3}, "s": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1.4142135623730951}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {"nanopyx": {"tf": 2.23606797749979}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1.4142135623730951}, "nanopyx.data.examples": {"tf": 1}}, "df": 8, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"nanopyx": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1.4142135623730951}, "nanopyx.core.io.checksum.get_checksum": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.data": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}}, "df": 18, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx": {"tf": 2.8284271247461903}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 2}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}}, "df": 9, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}}, "df": 13}}}, "e": {"docs": {"nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 2}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.__init__": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "o": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"nanopyx.data.examples.get_path": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.examples": {"tf": 1}}, "df": 2}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {"nanopyx": {"tf": 1.7320508075688772}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}}, "f": {"docs": {"nanopyx": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1.4142135623730951}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.4142135623730951}}, "df": 9}}, "w": {"docs": {"nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1.4142135623730951}}, "df": 4, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 12}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}}, "df": 2}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx": {"tf": 2}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1.4142135623730951}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.7320508075688772}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.7320508075688772}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1.7320508075688772}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1.4142135623730951}}, "df": 27, "i": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core": {"tf": 1}, "nanopyx.data.examples": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}}, "df": 6, "/": {"2": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx": {"tf": 1.4142135623730951}, "nanopyx.core": {"tf": 1}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.get_dtype": {"tf": 1.4142135623730951}, "nanopyx.core.transform.translation.translate_array": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.data": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1.4142135623730951}, "nanopyx.data.examples": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}}, "df": 10, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.list_datasets": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.list_datasets_nickname": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1.7320508075688772}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1.4142135623730951}, "nanopyx.data.examples": {"tf": 1}}, "df": 8, "s": {"docs": {"nanopyx.data": {"tf": 1.7320508075688772}, "nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 2, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 1}, "s": {"docs": {"nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.transform.translation.translate_array": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 2.23606797749979}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 2}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 2}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1.4142135623730951}}, "df": 14, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx": {"tf": 1.4142135623730951}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.data": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 2.23606797749979}, "nanopyx.data.examples": {"tf": 1.4142135623730951}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.data": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data": {"tf": 1.7320508075688772}}, "df": 1}, "d": {"docs": {"nanopyx.data.download.ExampleDataManager.clear_downloads": {"tf": 1}}, "df": 1}}, "s": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 14}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.examples.get_path": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 2}}}}}}}}}, "x": {"docs": {"nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1.4142135623730951}}, "df": 1}, "y": {"docs": {"nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 2}}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.data": {"tf": 1.4142135623730951}, "nanopyx.data.examples": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.magnify": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 16}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1.4142135623730951}}, "df": 1, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1.4142135623730951}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 27, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2.23606797749979}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 9}}}}, "a": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}}, "df": 8}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.7320508075688772}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 2, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2.23606797749979}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 3}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1, "s": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {"nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1.4142135623730951}}, "df": 4, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1}}, "df": 5}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.io.checksum.get_checksum": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"nanopyx": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"6": {"4": {"7": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1.4142135623730951}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.data": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.data.examples": {"tf": 1.4142135623730951}}, "df": 5, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "s": {"docs": {"nanopyx.data.examples.get_path": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.7320508075688772}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.data.examples": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}}, "df": 4}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}}, "df": 2, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis": {"tf": 1}, "nanopyx.core.analysis.ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 2.23606797749979}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 2.23606797749979}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 2.23606797749979}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}}, "df": 12, "s": {"docs": {"nanopyx.core.analysis": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 8}}}, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "e": {"docs": {"nanopyx.core": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "x": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "j": {"docs": {"nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"nanopyx.core.transform.image_add_random_noise.getSimplexNoise": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm.rcc.get_image_shift": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}, "d": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1}}, "df": 1}}, "s": {"docs": {"nanopyx.core": {"tf": 1}, "nanopyx.data": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.analysis": {"tf": 1}, "nanopyx.data.examples": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1.4142135623730951}}, "df": 2}}}}, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1.4142135623730951}}, "df": 1}, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx": {"tf": 1.4142135623730951}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_dataset_info": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.get_thumbnail": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 7}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}}, "df": 5, "d": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1.4142135623730951}}, "df": 5}, "s": {"docs": {"nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}, "nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis": {"tf": 1}, "nanopyx.core.analysis.ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 2}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 2}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 2}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}}, "df": 9}}, "p": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.analysis.ccm": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}}, "df": 1}, "d": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.apply_correction": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}}, "df": 1, "t": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.io.checksum.get_checksum": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.4142135623730951}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1.4142135623730951}}, "df": 4}}}, "y": {"0": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 1}, "1": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 1}, "docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 2}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1.7320508075688772}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}}, "df": 22, "o": {"docs": {}, "df": 0, "u": {"docs": {"nanopyx": {"tf": 2.449489742783178}}, "df": 1}}}, "v": {"1": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}, "2": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.data": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 18, "s": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 14}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1.4142135623730951}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.image_add_random_noise.addSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getSquares": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addRamp": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.getRamp": {"tf": 1.4142135623730951}}, "df": 4}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx": {"tf": 1}}, "df": 1, "+": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {"nanopyx": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "u": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_random_position": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_channel_misalignment": {"tf": 1}}, "df": 3}, "d": {"docs": {"nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"nanopyx.data": {"tf": 1}, "nanopyx.data.examples": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.sr.error_map.calculate_alpha_beta": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1.7320508075688772}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1.7320508075688772}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.addMixedGaussianPoissonNoise2": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 10}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}}}, "t": {"docs": {"nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.data": {"tf": 4.58257569495584}, "nanopyx.data.examples": {"tf": 3}}, "df": 10}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"nanopyx.data.examples": {"tf": 1}}, "df": 1}}}}, "u": {"2": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.data": {"tf": 1.4142135623730951}}, "df": 1}}}, "docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.__init__": {"tf": 1}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1.4142135623730951}}, "df": 4, "r": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}, "d": {"docs": {"nanopyx.core.analysis.ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_interpolated_px_value_interp2d": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.corrector.DriftCorrector.load_estimator_table": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_comments": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_npy": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.export_csv": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.import_csv": {"tf": 1}}, "df": 26}, "s": {"docs": {"nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.get_max": {"tf": 1}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 1}, "nanopyx.core.transform.image_magnify": {"tf": 1}, "nanopyx.core.transform.image_shift": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.core.transform.translation.translate_array": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}}, "df": 10}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.data": {"tf": 2}}, "df": 1, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.data": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "x": {"0": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 1}, "1": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}}, "df": 1}, "2": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}, "e": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.4142135623730951}}, "df": 1}}, "4": {"0": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"1": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.4142135623730951}}, "df": 2}, "3": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}, "4": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 1}, "5": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}}, "df": 1}, "6": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}}, "df": 1}, "9": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0, "c": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}}, "df": 1}, "f": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}, "e": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}}, "7": {"0": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}}, "df": 1}, "2": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}}, "df": 1}, "3": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1.7320508075688772}}, "df": 2}, "9": {"docs": {"nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"nanopyx.core.analysis.ccm.ccm.calculate_ccm": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.ccm.calculate_ccm_from_ref": {"tf": 1.7320508075688772}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.calculate_translation_mask": {"tf": 2}, "nanopyx.core.analysis.ccm.cross_correlation_elastic.get_shift_from_ccm_slice": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.ccm.estimate_shift.GetMaxOptimizer.__init__": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.check_even_square": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.get_closest_even_square_size": {"tf": 1}, "nanopyx.core.analysis.ccm.helper_functions.make_even_square": {"tf": 1.4142135623730951}, "nanopyx.core.analysis.pearson_correlation.calculate_ppmcc": {"tf": 2}, "nanopyx.core.analysis.pearson_correlation.pearson_correlation": {"tf": 1.4142135623730951}, "nanopyx.core.image.blocks.assemble_frame_from_blocks": {"tf": 1.7320508075688772}, "nanopyx.core.transform.binning.rebin_2d": {"tf": 1.4142135623730951}, "nanopyx.core.transform.image_add_random_noise.addPerlinNoise": {"tf": 1}, "nanopyx.core.transform.image_add_random_noise.getPerlinNoise": {"tf": 1}, "nanopyx.core.transform.interpolation.catmull_rom.interpolate": {"tf": 1.4142135623730951}, "nanopyx.core.transform.interpolation.nearest_neighbor.Interpolator.shift": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.core.utils.imagegenerator.beads.generate_timelapse_drift": {"tf": 1.4142135623730951}, "nanopyx.methods.channel_registration.estimate_channel_registration": {"tf": 1.7320508075688772}, "nanopyx.methods.channel_registration.apply_channel_registration": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}}, "df": 22}, "z": {"docs": {"nanopyx.core.transform.binning.rebin_2d": {"tf": 1}, "nanopyx.core.utils.imagegenerator.beads.generate_image": {"tf": 1.4142135623730951}, "nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.apply_drift_alignment": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "p": {"docs": {"nanopyx.core.io.zip_image_loader.ZipTiffIterator.__init__": {"tf": 1.7320508075688772}, "nanopyx.core.io.zip_image_loader.ZipTiffIterator.close": {"tf": 1}, "nanopyx.data.download.ExampleDataManager.download_tiff_sequence": {"tf": 1.4142135623730951}}, "df": 3, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"nanopyx.data.download.ExampleDataManager.get_ZipTiffIterator": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"nanopyx.core.transform": {"tf": 1}, "nanopyx.core.transform.image_magnify": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.catmull_rom_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bicubic_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.bilinear_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.nearest_neighbor_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.scipy_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.skimage_zoom": {"tf": 1}, "nanopyx.core.transform.image_magnify.cv2_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"nanopyx.core.transform.image_magnify.fourier_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.fft_zoom.magnify": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"nanopyx.core.transform.image_magnify.lanczos_zoom": {"tf": 1}, "nanopyx.core.transform.interpolation.lanczos.Interpolator.__init__": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"nanopyx.methods.drift_alignment.estimate_drift_alignment": {"tf": 1}, "nanopyx.methods.drift_alignment.estimator_table.DriftEstimatorTable.set_params": {"tf": 1}}, "df": 2}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"nanopyx.data": {"tf": 3.1622776601683795}, "nanopyx.data.examples": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();