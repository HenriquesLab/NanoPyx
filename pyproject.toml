[build-system]
requires = ["setuptools>=42", "wheel>=0.38.4", "cython>=0.29.0", "numpy>=1.19.0"]
build-backend = "setuptools.build_meta"

[project]
name = "nanopyx"
version = "0.0.1"
dynamic = ["urls", "classifiers", "authors", "requires-python", "description"]

[tool.cibuildwheel]
build = "*"
skip = ""
test-skip = ""

archs = ["auto"]
build-frontend = "pip"
config-settings = {}
dependency-versions = "pinned"
environment = {}
environment-pass = []
build-verbosity = ""

before-all = ""
before-build = ""
repair-wheel-command = ""

#test-command = ""
before-test = ""
test-requires = "pytest"
test-extras = []
test-command = "pytest {project}/tests"

container-engine = "docker"

manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"
manylinux-ppc64le-image = "manylinux2014"
manylinux-s390x-image = "manylinux2014"
manylinux-pypy_x86_64-image = "manylinux2014"
manylinux-pypy_i686-image = "manylinux2014"
manylinux-pypy_aarch64-image = "manylinux2014"

musllinux-x86_64-image = "musllinux_1_1"
musllinux-i686-image = "musllinux_1_1"
musllinux-aarch64-image = "musllinux_1_1"
musllinux-ppc64le-image = "musllinux_1_1"
musllinux-s390x-image = "musllinux_1_1"


[tool.cibuildwheel.linux]
select = "cp3{8,9,10}-*"
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
repair-wheel-command = "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"

[tool.cibuildwheel.windows]

[tool.pyright]
reportUndefinedVariable = false
